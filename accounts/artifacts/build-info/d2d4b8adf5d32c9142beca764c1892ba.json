{
	"id": "d2d4b8adf5d32c9142beca764c1892ba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"accounts/FuzzyIdentityChallenge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ninterface IName {\r\n    function name() external view returns (bytes32);\r\n}\r\n\r\ncontract FuzzyIdentityChallenge {\r\n    bool public isComplete;\r\n\r\n    function authenticate() public {\r\n        require(isSmarx(msg.sender));\r\n        require(isBadCode(msg.sender));\r\n\r\n        isComplete = true;\r\n    }\r\n\r\n    function isSmarx(address addr) internal view returns (bool) {\r\n        return IName(addr).name() == bytes32(\"smarx\");\r\n    }\r\n\r\n    function isBadCode(address _addr) internal pure returns (bool) {\r\n        bytes20 addr = bytes20(_addr);\r\n        bytes20 id = hex\"000000000000000000000000000000000badc0de\";\r\n        bytes20 mask = hex\"000000000000000000000000000000000fffffff\";\r\n\r\n        for (uint256 i = 0; i < 34; i++) {\r\n            if (addr & mask == id) {\r\n                return true;\r\n            }\r\n            mask <<= 4;\r\n            id <<= 4;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"accounts/FuzzyIdentityChallenge.sol": {
				"FuzzyIdentityChallenge": {
					"abi": [
						{
							"inputs": [],
							"name": "authenticate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"accounts/FuzzyIdentityChallenge.sol\":139:965  contract FuzzyIdentityChallenge {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"accounts/FuzzyIdentityChallenge.sol\":139:965  contract FuzzyIdentityChallenge {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x380c7a67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"accounts/FuzzyIdentityChallenge.sol\":209:358  function authenticate() public {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":178:200  bool public isComplete */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"accounts/FuzzyIdentityChallenge.sol\":209:358  function authenticate() public {... */\n    tag_6:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":259:278  isSmarx(msg.sender) */\n      tag_12\n        /* \"accounts/FuzzyIdentityChallenge.sol\":267:277  msg.sender */\n      caller\n        /* \"accounts/FuzzyIdentityChallenge.sol\":259:266  isSmarx */\n      tag_13\n        /* \"accounts/FuzzyIdentityChallenge.sol\":259:278  isSmarx(msg.sender) */\n      jump\t// in\n    tag_12:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":251:279  require(isSmarx(msg.sender)) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":298:319  isBadCode(msg.sender) */\n      tag_15\n        /* \"accounts/FuzzyIdentityChallenge.sol\":308:318  msg.sender */\n      caller\n        /* \"accounts/FuzzyIdentityChallenge.sol\":298:307  isBadCode */\n      tag_16\n        /* \"accounts/FuzzyIdentityChallenge.sol\":298:319  isBadCode(msg.sender) */\n      jump\t// in\n    tag_15:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":290:320  require(isBadCode(msg.sender)) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":346:350  true */\n      0x01\n        /* \"accounts/FuzzyIdentityChallenge.sol\":333:343  isComplete */\n      0x00\n      dup1\n        /* \"accounts/FuzzyIdentityChallenge.sol\":333:350  isComplete = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":209:358  function authenticate() public {... */\n      jump\t// out\n        /* \"accounts/FuzzyIdentityChallenge.sol\":178:200  bool public isComplete */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"accounts/FuzzyIdentityChallenge.sol\":366:490  function isSmarx(address addr) internal view returns (bool) {... */\n    tag_13:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":420:424  bool */\n      0x00\n        /* \"accounts/FuzzyIdentityChallenge.sol\":466:482  bytes32(\"smarx\") */\n      0x736d617278000000000000000000000000000000000000000000000000000000\n        /* \"accounts/FuzzyIdentityChallenge.sol\":450:454  addr */\n      dup3\n        /* \"accounts/FuzzyIdentityChallenge.sol\":444:460  IName(addr).name */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x06fdde03\n        /* \"accounts/FuzzyIdentityChallenge.sol\":444:462  IName(addr).name() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":444:482  IName(addr).name() == bytes32(\"smarx\") */\n      eq\n        /* \"accounts/FuzzyIdentityChallenge.sol\":437:482  return IName(addr).name() == bytes32(\"smarx\") */\n      swap1\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":366:490  function isSmarx(address addr) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"accounts/FuzzyIdentityChallenge.sol\":498:962  function isBadCode(address _addr) internal pure returns (bool) {... */\n    tag_16:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":555:559  bool */\n      0x00\n        /* \"accounts/FuzzyIdentityChallenge.sol\":572:584  bytes20 addr */\n      dup1\n        /* \"accounts/FuzzyIdentityChallenge.sol\":595:600  _addr */\n      dup3\n        /* \"accounts/FuzzyIdentityChallenge.sol\":587:601  bytes20(_addr) */\n      0x60\n      shl\n        /* \"accounts/FuzzyIdentityChallenge.sol\":572:601  bytes20 addr = bytes20(_addr) */\n      swap1\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":612:622  bytes20 id */\n      0x00\n        /* \"accounts/FuzzyIdentityChallenge.sol\":612:670  bytes20 id = hex\"000000000000000000000000000000000badc0de\" */\n      0x0badc0de000000000000000000000000\n      swap1\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":681:693  bytes20 mask */\n      0x00\n        /* \"accounts/FuzzyIdentityChallenge.sol\":681:741  bytes20 mask = hex\"000000000000000000000000000000000fffffff\" */\n      0x0fffffff000000000000000000000000\n      swap1\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":759:768  uint256 i */\n      0x00\n        /* \"accounts/FuzzyIdentityChallenge.sol\":754:930  for (uint256 i = 0; i < 34; i++) {... */\n    tag_24:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":778:780  34 */\n      0x22\n        /* \"accounts/FuzzyIdentityChallenge.sol\":774:775  i */\n      dup2\n        /* \"accounts/FuzzyIdentityChallenge.sol\":774:780  i < 34 */\n      lt\n        /* \"accounts/FuzzyIdentityChallenge.sol\":754:930  for (uint256 i = 0; i < 34; i++) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"accounts/FuzzyIdentityChallenge.sol\":821:823  id */\n      dup3\n        /* \"accounts/FuzzyIdentityChallenge.sol\":806:823  addr & mask == id */\n      not(0xffffffffffffffffffffffff)\n      and\n        /* \"accounts/FuzzyIdentityChallenge.sol\":813:817  mask */\n      dup3\n        /* \"accounts/FuzzyIdentityChallenge.sol\":806:810  addr */\n      dup6\n        /* \"accounts/FuzzyIdentityChallenge.sol\":806:817  addr & mask */\n      and\n        /* \"accounts/FuzzyIdentityChallenge.sol\":806:823  addr & mask == id */\n      not(0xffffffffffffffffffffffff)\n      and\n      sub\n        /* \"accounts/FuzzyIdentityChallenge.sol\":802:871  if (addr & mask == id) {... */\n      tag_27\n      jumpi\n        /* \"accounts/FuzzyIdentityChallenge.sol\":851:855  true */\n      0x01\n        /* \"accounts/FuzzyIdentityChallenge.sol\":844:855  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_23)\n        /* \"accounts/FuzzyIdentityChallenge.sol\":802:871  if (addr & mask == id) {... */\n    tag_27:\n        /* \"accounts/FuzzyIdentityChallenge.sol\":894:895  4 */\n      0x04\n        /* \"accounts/FuzzyIdentityChallenge.sol\":885:895  mask <<= 4 */\n      dup3\n      not(0xffffffffffffffffffffffff)\n      and\n      swap1\n      shl\n      swap2\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":917:918  4 */\n      0x04\n        /* \"accounts/FuzzyIdentityChallenge.sol\":910:918  id <<= 4 */\n      dup4\n      not(0xffffffffffffffffffffffff)\n      and\n      swap1\n      shl\n      swap3\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":782:785  i++ */\n      dup1\n      dup1\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      swap2\n      pop\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":754:930  for (uint256 i = 0; i < 34; i++) {... */\n      jump(tag_24)\n    tag_25:\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":949:954  false */\n      0x00\n        /* \"accounts/FuzzyIdentityChallenge.sol\":942:954  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"accounts/FuzzyIdentityChallenge.sol\":498:962  function isBadCode(address _addr) internal pure returns (bool) {... */\n    tag_23:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_30:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_31:\n        /* \"#utility.yul\":184:205   */\n      tag_43\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_10:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_45\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:632   */\n    tag_33:\n        /* \"#utility.yul\":624:625   */\n      0x00\n        /* \"#utility.yul\":621:622   */\n      dup1\n        /* \"#utility.yul\":614:626   */\n      revert\n        /* \"#utility.yul\":761:838   */\n    tag_35:\n        /* \"#utility.yul\":798:805   */\n      0x00\n        /* \"#utility.yul\":827:832   */\n      dup2\n        /* \"#utility.yul\":816:832   */\n      swap1\n      pop\n        /* \"#utility.yul\":761:838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":844:966   */\n    tag_36:\n        /* \"#utility.yul\":917:941   */\n      tag_51\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":917:941   */\n      tag_35\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":910:915   */\n      dup2\n        /* \"#utility.yul\":907:942   */\n      eq\n        /* \"#utility.yul\":897:960   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":956:957   */\n      0x00\n        /* \"#utility.yul\":953:954   */\n      dup1\n        /* \"#utility.yul\":946:958   */\n      revert\n        /* \"#utility.yul\":897:960   */\n    tag_52:\n        /* \"#utility.yul\":844:966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":972:1115   */\n    tag_37:\n        /* \"#utility.yul\":1029:1034   */\n      0x00\n        /* \"#utility.yul\":1060:1066   */\n      dup2\n        /* \"#utility.yul\":1054:1067   */\n      mload\n        /* \"#utility.yul\":1045:1067   */\n      swap1\n      pop\n        /* \"#utility.yul\":1076:1109   */\n      tag_54\n        /* \"#utility.yul\":1103:1108   */\n      dup2\n        /* \"#utility.yul\":1076:1109   */\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":972:1115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1472   */\n    tag_22:\n        /* \"#utility.yul\":1191:1197   */\n      0x00\n        /* \"#utility.yul\":1240:1242   */\n      0x20\n        /* \"#utility.yul\":1228:1237   */\n      dup3\n        /* \"#utility.yul\":1219:1226   */\n      dup5\n        /* \"#utility.yul\":1215:1238   */\n      sub\n        /* \"#utility.yul\":1211:1243   */\n      slt\n        /* \"#utility.yul\":1208:1327   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1246:1325   */\n      tag_57\n      tag_33\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1208:1327   */\n    tag_56:\n        /* \"#utility.yul\":1366:1367   */\n      0x00\n        /* \"#utility.yul\":1391:1455   */\n      tag_58\n        /* \"#utility.yul\":1447:1454   */\n      dup5\n        /* \"#utility.yul\":1438:1444   */\n      dup3\n        /* \"#utility.yul\":1427:1436   */\n      dup6\n        /* \"#utility.yul\":1423:1445   */\n      add\n        /* \"#utility.yul\":1391:1455   */\n      tag_37\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1381:1455   */\n      swap2\n      pop\n        /* \"#utility.yul\":1337:1465   */\n      pop\n        /* \"#utility.yul\":1121:1472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1658   */\n    tag_38:\n        /* \"#utility.yul\":1526:1603   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1523:1524   */\n      0x00\n        /* \"#utility.yul\":1516:1604   */\n      mstore\n        /* \"#utility.yul\":1623:1627   */\n      0x11\n        /* \"#utility.yul\":1620:1621   */\n      0x04\n        /* \"#utility.yul\":1613:1628   */\n      mstore\n        /* \"#utility.yul\":1647:1651   */\n      0x24\n        /* \"#utility.yul\":1644:1645   */\n      0x00\n        /* \"#utility.yul\":1637:1652   */\n      revert\n        /* \"#utility.yul\":1664:1741   */\n    tag_39:\n        /* \"#utility.yul\":1701:1708   */\n      0x00\n        /* \"#utility.yul\":1730:1735   */\n      dup2\n        /* \"#utility.yul\":1719:1735   */\n      swap1\n      pop\n        /* \"#utility.yul\":1664:1741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1747:1980   */\n    tag_29:\n        /* \"#utility.yul\":1786:1789   */\n      0x00\n        /* \"#utility.yul\":1809:1833   */\n      tag_62\n        /* \"#utility.yul\":1827:1832   */\n      dup3\n        /* \"#utility.yul\":1809:1833   */\n      tag_39\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1800:1833   */\n      swap2\n      pop\n        /* \"#utility.yul\":1855:1921   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1848:1853   */\n      dup3\n        /* \"#utility.yul\":1845:1922   */\n      sub\n        /* \"#utility.yul\":1842:1945   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1925:1943   */\n      tag_64\n      tag_38\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1842:1945   */\n    tag_63:\n        /* \"#utility.yul\":1972:1973   */\n      0x01\n        /* \"#utility.yul\":1965:1970   */\n      dup3\n        /* \"#utility.yul\":1961:1974   */\n      add\n        /* \"#utility.yul\":1954:1974   */\n      swap1\n      pop\n        /* \"#utility.yul\":1747:1980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220add0b460d09a86f9329572603a3e97a9dda14e7227716c4225f74a2f79ae0ed164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610363806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063380c7a671461003b578063b2fa1c9e14610045575b600080fd5b610043610063565b005b61004d6100a3565b60405161005a9190610229565b60405180910390f35b61006c336100b4565b61007557600080fd5b61007e3361014e565b61008757600080fd5b60016000806101000a81548160ff021916908315150217905550565b60008054906101000a900460ff1681565b60007f736d6172780000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610146919061027f565b149050919050565b6000808260601b905060006f0badc0de000000000000000000000000905060006f0fffffff000000000000000000000000905060005b602281101561020057826bffffffffffffffffffffffff19168285166bffffffffffffffffffffffff1916036101c1576001945050505050610209565b6004826bffffffffffffffffffffffff1916901b91506004836bffffffffffffffffffffffff1916901b925080806101f8906102e5565b915050610184565b50600093505050505b919050565b60008115159050919050565b6102238161020e565b82525050565b600060208201905061023e600083018461021a565b92915050565b600080fd5b6000819050919050565b61025c81610249565b811461026757600080fd5b50565b60008151905061027981610253565b92915050565b60006020828403121561029557610294610244565b5b60006102a38482850161026a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006102f0826102db565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610322576103216102ac565b5b60018201905091905056fea2646970667358221220add0b460d09a86f9329572603a3e97a9dda14e7227716c4225f74a2f79ae0ed164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x380C7A67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C CALLER PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E CALLER PUSH2 0x14E JUMP JUMPDEST PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x736D617278000000000000000000000000000000000000000000000000000000 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x27F JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x0 PUSH16 0xBADC0DE000000000000000000000000 SWAP1 POP PUSH1 0x0 PUSH16 0xFFFFFFF000000000000000000000000 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x22 DUP2 LT ISZERO PUSH2 0x200 JUMPI DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 DUP6 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x1C1 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x209 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL SWAP2 POP PUSH1 0x4 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL SWAP3 POP DUP1 DUP1 PUSH2 0x1F8 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x184 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223 DUP2 PUSH2 0x20E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C DUP2 PUSH2 0x249 JUMP JUMPDEST DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x279 DUP2 PUSH2 0x253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH2 0x294 PUSH2 0x244 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A3 DUP5 DUP3 DUP6 ADD PUSH2 0x26A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x322 JUMPI PUSH2 0x321 PUSH2 0x2AC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xD0 0xB4 PUSH1 0xD0 SWAP11 DUP7 0xF9 ORIGIN SWAP6 PUSH19 0x603A3E97A9DDA14E7227716C4225F74A2F79AE 0xE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "139:826:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@authenticate_31": {
									"entryPoint": 99,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBadCode_104": {
									"entryPoint": 334,
									"id": 104,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isComplete_9": {
									"entryPoint": 163,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isSmarx_50": {
									"entryPoint": 180,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1983:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "484:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "494:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "467:6:1",
														"type": ""
													}
												],
												"src": "434:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "614:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "515:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "727:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "744:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "737:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "638:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "827:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "816:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "788:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "798:7:1",
														"type": ""
													}
												],
												"src": "761:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "887:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "944:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "953:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "956:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "946:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "946:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "910:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "935:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "917:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "917:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "907:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:43:1"
															},
															"nodeType": "YulIf",
															"src": "897:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "880:5:1",
														"type": ""
													}
												],
												"src": "844:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1035:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1045:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1060:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1054:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1045:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1103:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1076:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1076:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1013:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1021:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1029:5:1",
														"type": ""
													}
												],
												"src": "972:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1244:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1246:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1246:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1246:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1219:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1228:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1215:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1240:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1211:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:32:1"
															},
															"nodeType": "YulIf",
															"src": "1208:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1337:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1352:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1366:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1356:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1381:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1427:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1438:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1423:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1423:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1447:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1391:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1391:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1381:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1179:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1191:6:1",
														"type": ""
													}
												],
												"src": "1121:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1523:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1526:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1516:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1613:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1613:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1647:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1637:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1730:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1719:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1691:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1701:7:1",
														"type": ""
													}
												],
												"src": "1664:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1827:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1809:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1923:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1925:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1925:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1925:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1848:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1845:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:77:1"
															},
															"nodeType": "YulIf",
															"src": "1842:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1954:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1965:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1776:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1786:3:1",
														"type": ""
													}
												],
												"src": "1747:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063380c7a671461003b578063b2fa1c9e14610045575b600080fd5b610043610063565b005b61004d6100a3565b60405161005a9190610229565b60405180910390f35b61006c336100b4565b61007557600080fd5b61007e3361014e565b61008757600080fd5b60016000806101000a81548160ff021916908315150217905550565b60008054906101000a900460ff1681565b60007f736d6172780000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610146919061027f565b149050919050565b6000808260601b905060006f0badc0de000000000000000000000000905060006f0fffffff000000000000000000000000905060005b602281101561020057826bffffffffffffffffffffffff19168285166bffffffffffffffffffffffff1916036101c1576001945050505050610209565b6004826bffffffffffffffffffffffff1916901b91506004836bffffffffffffffffffffffff1916901b925080806101f8906102e5565b915050610184565b50600093505050505b919050565b60008115159050919050565b6102238161020e565b82525050565b600060208201905061023e600083018461021a565b92915050565b600080fd5b6000819050919050565b61025c81610249565b811461026757600080fd5b50565b60008151905061027981610253565b92915050565b60006020828403121561029557610294610244565b5b60006102a38482850161026a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006102f0826102db565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610322576103216102ac565b5b60018201905091905056fea2646970667358221220add0b460d09a86f9329572603a3e97a9dda14e7227716c4225f74a2f79ae0ed164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x380C7A67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C CALLER PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E CALLER PUSH2 0x14E JUMP JUMPDEST PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x736D617278000000000000000000000000000000000000000000000000000000 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FDDE03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x27F JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x0 PUSH16 0xBADC0DE000000000000000000000000 SWAP1 POP PUSH1 0x0 PUSH16 0xFFFFFFF000000000000000000000000 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x22 DUP2 LT ISZERO PUSH2 0x200 JUMPI DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 DUP6 AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x1C1 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x209 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL SWAP2 POP PUSH1 0x4 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL SWAP3 POP DUP1 DUP1 PUSH2 0x1F8 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x184 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223 DUP2 PUSH2 0x20E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C DUP2 PUSH2 0x249 JUMP JUMPDEST DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x279 DUP2 PUSH2 0x253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH2 0x294 PUSH2 0x244 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A3 DUP5 DUP3 DUP6 ADD PUSH2 0x26A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x322 JUMPI PUSH2 0x321 PUSH2 0x2AC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xD0 0xB4 PUSH1 0xD0 SWAP11 DUP7 0xF9 ORIGIN SWAP6 PUSH19 0x603A3E97A9DDA14E7227716C4225F74A2F79AE 0xE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "139:826:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;209:149;;;:::i;:::-;;178:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;209:149;259:19;267:10;259:7;:19::i;:::-;251:28;;;;;;298:21;308:10;298:9;:21::i;:::-;290:30;;;;;;346:4;333:10;;:17;;;;;;;;;;;;;;;;;;209:149::o;178:22::-;;;;;;;;;;;;:::o;366:124::-;420:4;466:16;450:4;444:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;437:45;;366:124;;;:::o;498:464::-;555:4;572:12;595:5;587:14;;572:29;;612:10;:58;;;681:12;:60;;;759:9;754:176;778:2;774:1;:6;754:176;;;821:2;806:17;;;813:4;806;:11;:17;;;;802:69;;851:4;844:11;;;;;;;;802:69;894:1;885:10;;;;;;;;917:1;910:8;;;;;;;;782:3;;;;;:::i;:::-;;;;754:176;;;;949:5;942:12;;;;;498:464;;;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:77;798:7;827:5;816:16;;761:77;;;:::o;844:122::-;917:24;935:5;917:24;:::i;:::-;910:5;907:35;897:63;;956:1;953;946:12;897:63;844:122;:::o;972:143::-;1029:5;1060:6;1054:13;1045:22;;1076:33;1103:5;1076:33;:::i;:::-;972:143;;;;:::o;1121:351::-;1191:6;1240:2;1228:9;1219:7;1215:23;1211:32;1208:119;;;1246:79;;:::i;:::-;1208:119;1366:1;1391:64;1447:7;1438:6;1427:9;1423:22;1391:64;:::i;:::-;1381:74;;1337:128;1121:351;;;;:::o;1478:180::-;1526:77;1523:1;1516:88;1623:4;1620:1;1613:15;1647:4;1644:1;1637:15;1664:77;1701:7;1730:5;1719:16;;1664:77;;;:::o;1747:233::-;1786:3;1809:24;1827:5;1809:24;:::i;:::-;1800:33;;1855:66;1848:5;1845:77;1842:103;;1925:18;;:::i;:::-;1842:103;1972:1;1965:5;1961:13;1954:20;;1747:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "173400",
								"executionCost": "220",
								"totalCost": "173620"
							},
							"external": {
								"authenticate()": "infinite",
								"isComplete()": "2468"
							},
							"internal": {
								"isBadCode(address)": "infinite",
								"isSmarx(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 139,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 965,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220add0b460d09a86f9329572603a3e97a9dda14e7227716c4225f74a2f79ae0ed164736f6c634300080f0033",
									".code": [
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "380C7A67"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA1C9E"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 209,
											"end": 358,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 209,
											"end": 358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 209,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 209,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 209,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 209,
											"end": 358,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 209,
											"end": 358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 209,
											"end": 358,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 178,
											"end": 200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 209,
											"end": 358,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 209,
											"end": 358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 267,
											"end": 277,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 259,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 259,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 278,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 259,
											"end": 278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 251,
											"end": 279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 251,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 308,
											"end": 318,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 298,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 298,
											"end": 319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 298,
											"end": 319,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 298,
											"end": 319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 290,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 290,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 333,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 333,
											"end": 350,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 333,
											"end": 350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 333,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 209,
											"end": 358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 178,
											"end": 200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 366,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "736D617278000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 450,
											"end": 454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 444,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 444,
											"end": 460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 444,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 444,
											"end": 462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 962,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 587,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 587,
											"end": 601,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 572,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "BADC0DE000000000000000000000000"
										},
										{
											"begin": 612,
											"end": 670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFF000000000000000000000000"
										},
										{
											"begin": 681,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 930,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 754,
											"end": 930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 774,
											"end": 775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 774,
											"end": 780,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 754,
											"end": 930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 754,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 754,
											"end": 930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 821,
											"end": 823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 813,
											"end": 817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 806,
											"end": 810,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 806,
											"end": 817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 806,
											"end": 823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 802,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 802,
											"end": 871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 851,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 844,
											"end": 855,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 844,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 844,
											"end": 855,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 802,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 885,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 895,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 885,
											"end": 895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 885,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 885,
											"end": 895,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 885,
											"end": 895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 885,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 910,
											"end": 918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 910,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 918,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 910,
											"end": 918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 910,
											"end": 918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 918,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 910,
											"end": 918,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 910,
											"end": 918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 782,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 754,
											"end": 930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 930,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 754,
											"end": 930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 949,
											"end": 954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 954,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 942,
											"end": 954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 942,
											"end": 954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 962,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 498,
											"end": 962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 515,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 761,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 966,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 844,
											"end": 966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 917,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 917,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 917,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 917,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 910,
											"end": 915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 907,
											"end": 942,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 897,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 897,
											"end": 960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 956,
											"end": 957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 946,
											"end": 958,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 897,
											"end": 960,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 897,
											"end": 960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1115,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 972,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1103,
											"end": 1108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1076,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1076,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1115,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1121,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1243,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1246,
											"end": 1325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1246,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1208,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1447,
											"end": 1454,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1391,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1391,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1472,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1523,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1613,
											"end": 1628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1651,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1652,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1741,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1664,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1747,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1827,
											"end": 1832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1809,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1833,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1809,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1921,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1842,
											"end": 1945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1925,
											"end": 1943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1945,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1842,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1965,
											"end": 1970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"accounts/FuzzyIdentityChallenge.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authenticate()": "380c7a67",
							"isComplete()": "b2fa1c9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"authenticate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"accounts/FuzzyIdentityChallenge.sol\":\"FuzzyIdentityChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"accounts/FuzzyIdentityChallenge.sol\":{\"keccak256\":\"0x65e0e0a4f6a089c796993119377c0702c14f4624e78af7b6ad7fb033cf9e1624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2c725c81e3c75ecf2d11d4738d824a0308a57dda69ddd131a458feea5afda6e\",\"dweb:/ipfs/QmZye2NJzT3xRdmwrq1frjuSdcFFD9K3BPdceeEsZqpfvk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "accounts/FuzzyIdentityChallenge.sol:FuzzyIdentityChallenge",
								"label": "isComplete",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IName": {
					"abi": [
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"name()": "06fdde03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"accounts/FuzzyIdentityChallenge.sol\":\"IName\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"accounts/FuzzyIdentityChallenge.sol\":{\"keccak256\":\"0x65e0e0a4f6a089c796993119377c0702c14f4624e78af7b6ad7fb033cf9e1624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2c725c81e3c75ecf2d11d4738d824a0308a57dda69ddd131a458feea5afda6e\",\"dweb:/ipfs/QmZye2NJzT3xRdmwrq1frjuSdcFFD9K3BPdceeEsZqpfvk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"accounts/FuzzyIdentityChallenge.sol": {
				"ast": {
					"absolutePath": "accounts/FuzzyIdentityChallenge.sol",
					"exportedSymbols": {
						"FuzzyIdentityChallenge": [
							105
						],
						"IName": [
							7
						]
					},
					"id": 106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IName",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "IName",
							"nameLocation": "71:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "93:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "97:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "123:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:9:0"
									},
									"scope": 7,
									"src": "84:48:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 106,
							"src": "61:74:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FuzzyIdentityChallenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 105,
							"linearizedBaseContracts": [
								105
							],
							"name": "FuzzyIdentityChallenge",
							"nameLocation": "148:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b2fa1c9e",
									"id": 9,
									"mutability": "mutable",
									"name": "isComplete",
									"nameLocation": "190:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "178:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "178:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "240:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 14,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "267:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "267:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 13,
																"name": "isSmarx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "259:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "259:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "251:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "251:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "251:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 21,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "308:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "308:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 20,
																"name": "isBadCode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "298:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) pure returns (bool)"
																}
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "298:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "290:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "290:30:0"
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 26,
														"name": "isComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "333:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "346:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "333:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "333:17:0"
											}
										]
									},
									"functionSelector": "380c7a67",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "authenticate",
									"nameLocation": "218:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:0:0"
									},
									"scope": 105,
									"src": "209:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "426:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 39,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "450:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 38,
																	"name": "IName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IName_$7_$",
																		"typeString": "type(contract IName)"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "444:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IName_$7",
																	"typeString": "contract IName"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "444:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																"typeString": "function () view external returns (bytes32)"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "444:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "736d617278",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "474:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_eba20de5d57b82f55d882c87a90fd52b291b20435a02aa482c1b16da62d71feb",
																	"typeString": "literal_string \"smarx\""
																},
																"value": "smarx"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_eba20de5d57b82f55d882c87a90fd52b291b20435a02aa482c1b16da62d71feb",
																	"typeString": "literal_string \"smarx\""
																}
															],
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 43,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "466:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "466:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "444:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 37,
												"id": 48,
												"nodeType": "Return",
												"src": "437:45:0"
											}
										]
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSmarx",
									"nameLocation": "375:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "391:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "383:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:14:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "420:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 35,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "420:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:6:0"
									},
									"scope": 105,
									"src": "366:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "561:401:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "580:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 103,
														"src": "572:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 57,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"arguments": [
														{
															"id": 61,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "595:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes20_$",
															"typeString": "type(bytes20)"
														},
														"typeName": {
															"id": 59,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "587:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "572:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "620:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 103,
														"src": "612:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 64,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"hexValue": "000000000000000000000000000000000badc0de",
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "hexString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "625:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e46b4390c003cb7a2c15e6c092940ad8f28753e9ae9a76d0aaea58718e962ae0",
														"typeString": "literal_string hex\"000000000000000000000000000000000badc0de\""
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "612:58:0"
											},
											{
												"assignments": [
													69
												],
												"declarations": [
													{
														"constant": false,
														"id": 69,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "689:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 103,
														"src": "681:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 68,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"hexValue": "000000000000000000000000000000000fffffff",
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "hexString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "696:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_04be31e00e47e621a6f132c63a563fa1b96fc809d569bf050c86d8cff4f8101f",
														"typeString": "literal_string hex\"000000000000000000000000000000000fffffff\""
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "681:60:0"
											},
											{
												"body": {
													"id": 99,
													"nodeType": "Block",
													"src": "787:143:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	},
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 82,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "806:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes20",
																			"typeString": "bytes20"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 83,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 69,
																		"src": "813:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes20",
																			"typeString": "bytes20"
																		}
																	},
																	"src": "806:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 85,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "821:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																},
																"src": "806:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 90,
															"nodeType": "IfStatement",
															"src": "802:69:0",
															"trueBody": {
																"id": 89,
																"nodeType": "Block",
																"src": "825:46:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 87,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "851:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 56,
																		"id": 88,
																		"nodeType": "Return",
																		"src": "844:11:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 91,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "885:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "894:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "885:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															},
															"id": 94,
															"nodeType": "ExpressionStatement",
															"src": "885:10:0"
														},
														{
															"expression": {
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 95,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "910:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "917:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "910:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															},
															"id": 98,
															"nodeType": "ExpressionStatement",
															"src": "910:8:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3334",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "778:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_34_by_1",
															"typeString": "int_const 34"
														},
														"value": "34"
													},
													"src": "774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"initializationExpression": {
													"assignments": [
														73
													],
													"declarations": [
														{
															"constant": false,
															"id": 73,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "767:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 100,
															"src": "759:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 72,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "759:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 75,
													"initialValue": {
														"hexValue": "30",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "759:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "782:3:0",
														"subExpression": {
															"id": 79,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "782:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 81,
													"nodeType": "ExpressionStatement",
													"src": "782:3:0"
												},
												"nodeType": "ForStatement",
												"src": "754:176:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 56,
												"id": 102,
												"nodeType": "Return",
												"src": "942:12:0"
											}
										]
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBadCode",
									"nameLocation": "507:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "525:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "517:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:15:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "555:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:6:0"
									},
									"scope": 105,
									"src": "498:464:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 106,
							"src": "139:826:0",
							"usedErrors": []
						}
					],
					"src": "33:932:0"
				},
				"id": 0
			}
		}
	}
}