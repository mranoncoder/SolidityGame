{
	"id": "d3f503977db1992df6697fcc1c5c4256",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"lotteries/GuessTheNumberChallenge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ncontract GuessTheNumberChallenge {\r\n    uint8 answer = 42;\r\n\r\n    constructor() payable{\r\n       require(msg.value == 1 ether);\r\n    }\r\n\r\n    function isComplete() public view returns (bool) {\r\n        return address(this).balance == 0;\r\n    }\r\n\r\n    function guess(uint8 n) public payable {\r\n        require(msg.value == 1 ether);\r\n\r\n        if (n == answer) {\r\n            payable(msg.sender).transfer(2 ether);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lotteries/GuessTheNumberChallenge.sol": {
				"GuessTheNumberChallenge": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "n",
									"type": "uint8"
								}
							],
							"name": "guess",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lotteries/GuessTheNumberChallenge.sol\":61:495  contract GuessTheNumberChallenge {... */\n  mstore(0x40, 0x80)\n    /* \"lotteries/GuessTheNumberChallenge.sol\":116:118  42 */\n  0x2a\n    /* \"lotteries/GuessTheNumberChallenge.sol\":101:118  uint8 answer = 42 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lotteries/GuessTheNumberChallenge.sol\":179:186  1 ether */\n  0x0de0b6b3a7640000\n    /* \"lotteries/GuessTheNumberChallenge.sol\":166:175  msg.value */\n  callvalue\n    /* \"lotteries/GuessTheNumberChallenge.sol\":166:186  msg.value == 1 ether */\n  eq\n    /* \"lotteries/GuessTheNumberChallenge.sol\":158:187  require(msg.value == 1 ether) */\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n    /* \"lotteries/GuessTheNumberChallenge.sol\":61:495  contract GuessTheNumberChallenge {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lotteries/GuessTheNumberChallenge.sol\":61:495  contract GuessTheNumberChallenge {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4ba4c16b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"lotteries/GuessTheNumberChallenge.sol\":312:492  function guess(uint8 n) public payable {... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n        /* \"lotteries/GuessTheNumberChallenge.sol\":203:304  function isComplete() public view returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lotteries/GuessTheNumberChallenge.sol\":312:492  function guess(uint8 n) public payable {... */\n    tag_7:\n        /* \"lotteries/GuessTheNumberChallenge.sol\":383:390  1 ether */\n      0x0de0b6b3a7640000\n        /* \"lotteries/GuessTheNumberChallenge.sol\":370:379  msg.value */\n      callvalue\n        /* \"lotteries/GuessTheNumberChallenge.sol\":370:390  msg.value == 1 ether */\n      eq\n        /* \"lotteries/GuessTheNumberChallenge.sol\":362:391  require(msg.value == 1 ether) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"lotteries/GuessTheNumberChallenge.sol\":413:419  answer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lotteries/GuessTheNumberChallenge.sol\":408:419  n == answer */\n      0xff\n      and\n        /* \"lotteries/GuessTheNumberChallenge.sol\":408:409  n */\n      dup2\n        /* \"lotteries/GuessTheNumberChallenge.sol\":408:419  n == answer */\n      0xff\n      and\n      sub\n        /* \"lotteries/GuessTheNumberChallenge.sol\":404:485  if (n == answer) {... */\n      tag_15\n      jumpi\n        /* \"lotteries/GuessTheNumberChallenge.sol\":444:454  msg.sender */\n      caller\n        /* \"lotteries/GuessTheNumberChallenge.sol\":436:464  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lotteries/GuessTheNumberChallenge.sol\":436:473  payable(msg.sender).transfer(2 ether) */\n      0x08fc\n        /* \"lotteries/GuessTheNumberChallenge.sol\":465:472  2 ether */\n      0x1bc16d674ec80000\n        /* \"lotteries/GuessTheNumberChallenge.sol\":436:473  payable(msg.sender).transfer(2 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n        /* \"lotteries/GuessTheNumberChallenge.sol\":404:485  if (n == answer) {... */\n    tag_15:\n        /* \"lotteries/GuessTheNumberChallenge.sol\":312:492  function guess(uint8 n) public payable {... */\n      pop\n      jump\t// out\n        /* \"lotteries/GuessTheNumberChallenge.sol\":203:304  function isComplete() public view returns (bool) {... */\n    tag_10:\n        /* \"lotteries/GuessTheNumberChallenge.sol\":246:250  bool */\n      0x00\n        /* \"lotteries/GuessTheNumberChallenge.sol\":295:296  0 */\n      dup1\n        /* \"lotteries/GuessTheNumberChallenge.sol\":270:291  address(this).balance */\n      selfbalance\n        /* \"lotteries/GuessTheNumberChallenge.sol\":270:296  address(this).balance == 0 */\n      eq\n        /* \"lotteries/GuessTheNumberChallenge.sol\":263:296  return address(this).balance == 0 */\n      swap1\n      pop\n        /* \"lotteries/GuessTheNumberChallenge.sol\":203:304  function isComplete() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_20:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:420   */\n    tag_22:\n        /* \"#utility.yul\":369:376   */\n      0x00\n        /* \"#utility.yul\":409:413   */\n      0xff\n        /* \"#utility.yul\":402:407   */\n      dup3\n        /* \"#utility.yul\":398:414   */\n      and\n        /* \"#utility.yul\":387:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":426:544   */\n    tag_23:\n        /* \"#utility.yul\":497:519   */\n      tag_33\n        /* \"#utility.yul\":513:518   */\n      dup2\n        /* \"#utility.yul\":497:519   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":490:495   */\n      dup2\n        /* \"#utility.yul\":487:520   */\n      eq\n        /* \"#utility.yul\":477:538   */\n      tag_34\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      dup1\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":477:538   */\n    tag_34:\n        /* \"#utility.yul\":426:544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":550:685   */\n    tag_24:\n        /* \"#utility.yul\":594:599   */\n      0x00\n        /* \"#utility.yul\":632:638   */\n      dup2\n        /* \"#utility.yul\":619:639   */\n      calldataload\n        /* \"#utility.yul\":610:639   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:679   */\n      tag_36\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":648:679   */\n      tag_23\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":550:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1016   */\n    tag_6:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":797:799   */\n      0x20\n        /* \"#utility.yul\":785:794   */\n      dup3\n        /* \"#utility.yul\":776:783   */\n      dup5\n        /* \"#utility.yul\":772:795   */\n      sub\n        /* \"#utility.yul\":768:800   */\n      slt\n        /* \"#utility.yul\":765:884   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":803:882   */\n      tag_39\n      tag_20\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":765:884   */\n    tag_38:\n        /* \"#utility.yul\":923:924   */\n      0x00\n        /* \"#utility.yul\":948:999   */\n      tag_40\n        /* \"#utility.yul\":991:998   */\n      dup5\n        /* \"#utility.yul\":982:988   */\n      dup3\n        /* \"#utility.yul\":971:980   */\n      dup6\n        /* \"#utility.yul\":967:989   */\n      add\n        /* \"#utility.yul\":948:999   */\n      tag_24\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":938:999   */\n      swap2\n      pop\n        /* \"#utility.yul\":894:1009   */\n      pop\n        /* \"#utility.yul\":691:1016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1112   */\n    tag_25:\n        /* \"#utility.yul\":1056:1063   */\n      0x00\n        /* \"#utility.yul\":1099:1104   */\n      dup2\n        /* \"#utility.yul\":1092:1105   */\n      iszero\n        /* \"#utility.yul\":1085:1106   */\n      iszero\n        /* \"#utility.yul\":1074:1106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1022:1112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1227   */\n    tag_26:\n        /* \"#utility.yul\":1199:1220   */\n      tag_43\n        /* \"#utility.yul\":1214:1219   */\n      dup2\n        /* \"#utility.yul\":1199:1220   */\n      tag_25\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1194:1197   */\n      dup3\n        /* \"#utility.yul\":1187:1221   */\n      mstore\n        /* \"#utility.yul\":1118:1227   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1233:1443   */\n    tag_12:\n        /* \"#utility.yul\":1320:1324   */\n      0x00\n        /* \"#utility.yul\":1358:1360   */\n      0x20\n        /* \"#utility.yul\":1347:1356   */\n      dup3\n        /* \"#utility.yul\":1343:1361   */\n      add\n        /* \"#utility.yul\":1335:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1436   */\n      tag_45\n        /* \"#utility.yul\":1433:1434   */\n      0x00\n        /* \"#utility.yul\":1422:1431   */\n      dup4\n        /* \"#utility.yul\":1418:1435   */\n      add\n        /* \"#utility.yul\":1409:1415   */\n      dup5\n        /* \"#utility.yul\":1371:1436   */\n      tag_26\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1233:1443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202484534678f86141c32e41f7101b5af4b6ac83687614a8a1c3e91499c4f8fb9764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052602a6000806101000a81548160ff021916908360ff160217905550670de0b6b3a7640000341461003357600080fd5b6101d7806100426000396000f3fe6080604052600436106100295760003560e01c80634ba4c16b1461002e578063b2fa1c9e1461004a575b600080fd5b6100486004803603810190610043919061013e565b610075565b005b34801561005657600080fd5b5061005f6100f6565b60405161006c9190610186565b60405180910390f35b670de0b6b3a7640000341461008957600080fd5b60008054906101000a900460ff1660ff168160ff16036100f3573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f193505050501580156100f1573d6000803e3d6000fd5b505b50565b6000804714905090565b600080fd5b600060ff82169050919050565b61011b81610105565b811461012657600080fd5b50565b60008135905061013881610112565b92915050565b60006020828403121561015457610153610100565b5b600061016284828501610129565b91505092915050565b60008115159050919050565b6101808161016b565b82525050565b600060208201905061019b6000830184610177565b9291505056fea26469706673582212202484534678f86141c32e41f7101b5af4b6ac83687614a8a1c3e91499c4f8fb9764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2A PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D7 DUP1 PUSH2 0x42 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BA4C16B EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0xF3 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B DUP2 PUSH2 0x105 JUMP JUMPDEST DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138 DUP2 PUSH2 0x112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154 JUMPI PUSH2 0x153 PUSH2 0x100 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162 DUP5 DUP3 DUP6 ADD PUSH2 0x129 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x16B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP5 MSTORE8 CHAINID PUSH25 0xF86141C32E41F7101B5AF4B6AC83687614A8A1C3E91499C4F8 0xFB SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "61:434:0:-:0;;;116:2;101:17;;;;;;;;;;;;;;;;;;;;179:7;166:9;:20;158:29;;;;;;61:434;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@guess_56": {
									"entryPoint": 117,
									"id": 56,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isComplete_29": {
									"entryPoint": 246,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1446:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "387:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "402:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "409:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "387:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "359:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "369:7:1",
														"type": ""
													}
												],
												"src": "334:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:77:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "531:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "513:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "497:15:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "497:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:41:1"
															},
															"nodeType": "YulIf",
															"src": "477:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "460:5:1",
														"type": ""
													}
												],
												"src": "426:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "600:85:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "610:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "632:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "619:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "610:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "648:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "578:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "586:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "594:5:1",
														"type": ""
													}
												],
												"src": "550:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "755:261:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "803:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "776:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "785:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "772:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "797:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "768:32:1"
															},
															"nodeType": "YulIf",
															"src": "765:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "894:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "909:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "913:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "938:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "971:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "982:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "991:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "948:18:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "938:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:1",
														"type": ""
													}
												],
												"src": "691:325:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1064:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1074:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1099:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1092:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1074:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1056:7:1",
														"type": ""
													}
												],
												"src": "1022:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1194:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1214:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1199:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1199:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1165:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1172:3:1",
														"type": ""
													}
												],
												"src": "1118:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1335:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1347:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1335:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1371:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1371:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1297:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1309:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1320:4:1",
														"type": ""
													}
												],
												"src": "1233:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80634ba4c16b1461002e578063b2fa1c9e1461004a575b600080fd5b6100486004803603810190610043919061013e565b610075565b005b34801561005657600080fd5b5061005f6100f6565b60405161006c9190610186565b60405180910390f35b670de0b6b3a7640000341461008957600080fd5b60008054906101000a900460ff1660ff168160ff16036100f3573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f193505050501580156100f1573d6000803e3d6000fd5b505b50565b6000804714905090565b600080fd5b600060ff82169050919050565b61011b81610105565b811461012657600080fd5b50565b60008135905061013881610112565b92915050565b60006020828403121561015457610153610100565b5b600061016284828501610129565b91505092915050565b60008115159050919050565b6101808161016b565b82525050565b600060208201905061019b6000830184610177565b9291505056fea26469706673582212202484534678f86141c32e41f7101b5af4b6ac83687614a8a1c3e91499c4f8fb9764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BA4C16B EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 PUSH1 0xFF AND SUB PUSH2 0xF3 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B DUP2 PUSH2 0x105 JUMP JUMPDEST DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138 DUP2 PUSH2 0x112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154 JUMPI PUSH2 0x153 PUSH2 0x100 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162 DUP5 DUP3 DUP6 ADD PUSH2 0x129 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180 DUP2 PUSH2 0x16B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 DUP5 MSTORE8 CHAINID PUSH25 0xF86141C32E41F7101B5AF4B6AC83687614A8A1C3E91499C4F8 0xFB SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "61:434:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;312:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;203:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:180;383:7;370:9;:20;362:29;;;;;;413:6;;;;;;;;;;408:11;;:1;:11;;;404:81;;444:10;436:28;;:37;465:7;436:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;404:81;312:180;:::o;203:101::-;246:4;295:1;270:21;:26;263:33;;203:101;:::o;88:117:1:-;197:1;194;187:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:135::-;594:5;632:6;619:20;610:29;;648:31;673:5;648:31;:::i;:::-;550:135;;;;:::o;691:325::-;748:6;797:2;785:9;776:7;772:23;768:32;765:119;;;803:79;;:::i;:::-;765:119;923:1;948:51;991:7;982:6;971:9;967:22;948:51;:::i;:::-;938:61;;894:115;691:325;;;;:::o;1022:90::-;1056:7;1099:5;1092:13;1085:21;1074:32;;1022:90;;;:::o;1118:109::-;1199:21;1214:5;1199:21;:::i;:::-;1194:3;1187:34;1118:109;;:::o;1233:210::-;1320:4;1358:2;1347:9;1343:18;1335:26;;1371:65;1433:1;1422:9;1418:17;1409:6;1371:65;:::i;:::-;1233:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94200",
								"executionCost": "24406",
								"totalCost": "118606"
							},
							"external": {
								"guess(uint8)": "infinite",
								"isComplete()": "351"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 495,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 495,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 495,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 116,
									"end": 118,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 101,
									"end": 118,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 118,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 101,
									"end": 118,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 101,
									"end": 118,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 101,
									"end": 118,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 101,
									"end": 118,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 179,
									"end": 186,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 166,
									"end": 175,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 186,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 158,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 158,
									"end": 187,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 158,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 187,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 187,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 158,
									"end": 187,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 158,
									"end": 187,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 495,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 495,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 495,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 495,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202484534678f86141c32e41f7101b5af4b6ac83687614a8a1c3e91499c4f8fb9764736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "4BA4C16B"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA1C9E"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 312,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 312,
											"end": 492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 312,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 312,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 312,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 203,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 203,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 312,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 370,
											"end": 379,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 390,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 362,
											"end": 391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 362,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 413,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 408,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 408,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 408,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 408,
											"end": 419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 408,
											"end": 419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 404,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 404,
											"end": 485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 444,
											"end": 454,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 465,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 404,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 312,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 203,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 270,
											"end": 296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 203,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 334,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 398,
											"end": 414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 387,
											"end": 414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 426,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 497,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 519,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 477,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 477,
											"end": 538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 477,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 477,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 550,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 594,
											"end": 599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 619,
											"end": 639,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 610,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 648,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 648,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 550,
											"end": 685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 550,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 776,
											"end": 783,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 765,
											"end": 884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 765,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 765,
											"end": 884,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 765,
											"end": 884,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 765,
											"end": 884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 923,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 971,
											"end": 980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 967,
											"end": 989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 948,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 948,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 948,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 938,
											"end": 999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 938,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1112,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1022,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1227,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1118,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1199,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1220,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1199,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1443,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1233,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1371,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1436,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1371,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1443,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"lotteries/GuessTheNumberChallenge.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"guess(uint8)": "4ba4c16b",
							"isComplete()": "b2fa1c9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"n\",\"type\":\"uint8\"}],\"name\":\"guess\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lotteries/GuessTheNumberChallenge.sol\":\"GuessTheNumberChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lotteries/GuessTheNumberChallenge.sol\":{\"keccak256\":\"0x45932fb5679c81b7e10e55bcbd804a249f642a8c045024b2eba544b1b6848ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daa5d801ab4adcb01b35e59cd86bcec0e49d8db588aeddd975eeb88f043c503b\",\"dweb:/ipfs/QmSnv2j4jtanHuJgLkjSKfK8pQbzJp7kgKjfHEdzBDKxtr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "lotteries/GuessTheNumberChallenge.sol:GuessTheNumberChallenge",
								"label": "answer",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lotteries/GuessTheNumberChallenge.sol": {
				"ast": {
					"absolutePath": "lotteries/GuessTheNumberChallenge.sol",
					"exportedSymbols": {
						"GuessTheNumberChallenge": [
							57
						]
					},
					"id": 58,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GuessTheNumberChallenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "GuessTheNumberChallenge",
							"nameLocation": "70:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "answer",
									"nameLocation": "107:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 57,
									"src": "101:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "101:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3432",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "116:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_42_by_1",
											"typeString": "int_const 42"
										},
										"value": "42"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "148:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 8,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "166:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "166:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "179:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "166:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 7,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "158:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "158:29:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "138:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "148:0:0"
									},
									"scope": 57,
									"src": "127:68:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "252:52:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 22,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "278:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GuessTheNumberChallenge_$57",
																		"typeString": "contract GuessTheNumberChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GuessTheNumberChallenge_$57",
																		"typeString": "contract GuessTheNumberChallenge"
																	}
																],
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "270:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 20,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "270:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "270:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "270:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "295:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "270:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 19,
												"id": 27,
												"nodeType": "Return",
												"src": "263:33:0"
											}
										]
									},
									"functionSelector": "b2fa1c9e",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isComplete",
									"nameLocation": "212:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "246:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:6:0"
									},
									"scope": 57,
									"src": "203:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "351:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 35,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "370:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "370:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "383:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "370:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "362:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 41,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 42,
														"name": "answer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "413:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "408:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "IfStatement",
												"src": "404:81:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "421:64:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "32",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "465:7:0",
																		"subdenomination": "ether",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2000000000000000000_by_1",
																			"typeString": "int_const 2000000000000000000"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_2000000000000000000_by_1",
																			"typeString": "int_const 2000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 46,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "444:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 47,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "444:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "436:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 44,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "436:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "436:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "436:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "436:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 52,
															"nodeType": "ExpressionStatement",
															"src": "436:37:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4ba4c16b",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "guess",
									"nameLocation": "321:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "333:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 30,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "327:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:0:0"
									},
									"scope": 57,
									"src": "312:180:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 58,
							"src": "61:434:0",
							"usedErrors": []
						}
					],
					"src": "33:462:0"
				},
				"id": 0
			}
		}
	}
}