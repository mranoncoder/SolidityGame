{
	"id": "2eec4654d6f55653e98edab5b0829c2a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"math/DonationChallenge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ncontract DonationChallenge {\r\n    struct Donation {\r\n        uint256 timestamp;\r\n        uint256 etherAmount;\r\n    }\r\n    Donation[] public donations;\r\n\r\n    address public owner;\r\n\r\n    constructor() payable{\r\n        require(msg.value == 1 ether);\r\n\r\n        owner = msg.sender;\r\n    }\r\n    function isComplete() public view returns (bool) {\r\n        return address(this).balance == 0;\r\n    }\r\n\r\n    function donate(uint256 etherAmount) public payable {\r\n        // amount is in ether, but msg.value is in wei\r\n        uint256 scale = 10**18 * 1 ether;\r\n        require(msg.value == etherAmount / scale);\r\n\r\n        Donation memory donation;\r\n        donation.timestamp = block.timestamp;\r\n        donation.etherAmount = etherAmount;\r\n\r\n        donations.push(donation);\r\n    }\r\n\r\n    function withdraw() public {\r\n        require(msg.sender == owner);\r\n        \r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"math/DonationChallenge.sol": {
				"DonationChallenge": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "etherAmount",
									"type": "uint256"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "donations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "etherAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"math/DonationChallenge.sol\":61:997  contract DonationChallenge {... */\n  mstore(0x40, 0x80)\n    /* \"math/DonationChallenge.sol\":301:308  1 ether */\n  0x0de0b6b3a7640000\n    /* \"math/DonationChallenge.sol\":288:297  msg.value */\n  callvalue\n    /* \"math/DonationChallenge.sol\":288:308  msg.value == 1 ether */\n  eq\n    /* \"math/DonationChallenge.sol\":280:309  require(msg.value == 1 ether) */\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n    /* \"math/DonationChallenge.sol\":330:340  msg.sender */\n  caller\n    /* \"math/DonationChallenge.sol\":322:327  owner */\n  0x01\n  0x00\n    /* \"math/DonationChallenge.sol\":322:340  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"math/DonationChallenge.sol\":61:997  contract DonationChallenge {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"math/DonationChallenge.sol\":61:997  contract DonationChallenge {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf14faf6f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf8626af8\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"math/DonationChallenge.sol\":848:994  function withdraw() public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"math/DonationChallenge.sol\":219:239  address public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"math/DonationChallenge.sol\":354:455  function isComplete() public view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"math/DonationChallenge.sol\":463:840  function donate(uint256 etherAmount) public payable {... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"math/DonationChallenge.sol\":183:210  Donation[] public donations */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"math/DonationChallenge.sol\":848:994  function withdraw() public {... */\n    tag_9:\n        /* \"math/DonationChallenge.sol\":908:913  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/DonationChallenge.sol\":894:913  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/DonationChallenge.sol\":894:904  msg.sender */\n      caller\n        /* \"math/DonationChallenge.sol\":894:913  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"math/DonationChallenge.sol\":886:914  require(msg.sender == owner) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"math/DonationChallenge.sol\":943:953  msg.sender */\n      caller\n        /* \"math/DonationChallenge.sol\":935:963  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/DonationChallenge.sol\":935:986  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"math/DonationChallenge.sol\":964:985  address(this).balance */\n      selfbalance\n        /* \"math/DonationChallenge.sol\":935:986  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n        /* \"math/DonationChallenge.sol\":848:994  function withdraw() public {... */\n      jump\t// out\n        /* \"math/DonationChallenge.sol\":219:239  address public owner */\n    tag_12:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"math/DonationChallenge.sol\":354:455  function isComplete() public view returns (bool) {... */\n    tag_17:\n        /* \"math/DonationChallenge.sol\":397:401  bool */\n      0x00\n        /* \"math/DonationChallenge.sol\":446:447  0 */\n      dup1\n        /* \"math/DonationChallenge.sol\":421:442  address(this).balance */\n      selfbalance\n        /* \"math/DonationChallenge.sol\":421:447  address(this).balance == 0 */\n      eq\n        /* \"math/DonationChallenge.sol\":414:447  return address(this).balance == 0 */\n      swap1\n      pop\n        /* \"math/DonationChallenge.sol\":354:455  function isComplete() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"math/DonationChallenge.sol\":463:840  function donate(uint256 etherAmount) public payable {... */\n    tag_23:\n        /* \"math/DonationChallenge.sol\":582:595  uint256 scale */\n      0x00\n        /* \"math/DonationChallenge.sol\":598:614  10**18 * 1 ether */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"math/DonationChallenge.sol\":582:614  uint256 scale = 10**18 * 1 ether */\n      swap1\n      pop\n        /* \"math/DonationChallenge.sol\":660:665  scale */\n      dup1\n        /* \"math/DonationChallenge.sol\":646:657  etherAmount */\n      dup3\n        /* \"math/DonationChallenge.sol\":646:665  etherAmount / scale */\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"math/DonationChallenge.sol\":633:642  msg.value */\n      callvalue\n        /* \"math/DonationChallenge.sol\":633:665  msg.value == etherAmount / scale */\n      eq\n        /* \"math/DonationChallenge.sol\":625:666  require(msg.value == etherAmount / scale) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"math/DonationChallenge.sol\":679:703  Donation memory donation */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"math/DonationChallenge.sol\":735:750  block.timestamp */\n      timestamp\n        /* \"math/DonationChallenge.sol\":714:722  donation */\n      dup2\n        /* \"math/DonationChallenge.sol\":714:732  donation.timestamp */\n      0x00\n      add\n        /* \"math/DonationChallenge.sol\":714:750  donation.timestamp = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"math/DonationChallenge.sol\":784:795  etherAmount */\n      dup3\n        /* \"math/DonationChallenge.sol\":761:769  donation */\n      dup2\n        /* \"math/DonationChallenge.sol\":761:781  donation.etherAmount */\n      0x20\n      add\n        /* \"math/DonationChallenge.sol\":761:795  donation.etherAmount = etherAmount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"math/DonationChallenge.sol\":808:817  donations */\n      0x00\n        /* \"math/DonationChallenge.sol\":823:831  donation */\n      dup2\n        /* \"math/DonationChallenge.sol\":808:832  donations.push(donation) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"math/DonationChallenge.sol\":515:840  {... */\n      pop\n      pop\n        /* \"math/DonationChallenge.sol\":463:840  function donate(uint256 etherAmount) public payable {... */\n      pop\n      jump\t// out\n        /* \"math/DonationChallenge.sol\":183:210  Donation[] public donations */\n    tag_27:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n    tag_40:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_44:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_45:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_61\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_44\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_46:\n        /* \"#utility.yul\":328:352   */\n      tag_63\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_45\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_65\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_46\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_47:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_48:\n        /* \"#utility.yul\":770:791   */\n      tag_68\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_47\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_19:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_70\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_48\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_50:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1424   */\n    tag_52:\n        /* \"#utility.yul\":1384:1391   */\n      0x00\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1402:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1347:1424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1552   */\n    tag_53:\n        /* \"#utility.yul\":1503:1527   */\n      tag_76\n        /* \"#utility.yul\":1521:1526   */\n      dup2\n        /* \"#utility.yul\":1503:1527   */\n      tag_52\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1496:1501   */\n      dup2\n        /* \"#utility.yul\":1493:1528   */\n      eq\n        /* \"#utility.yul\":1483:1546   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":1542:1543   */\n      0x00\n        /* \"#utility.yul\":1539:1540   */\n      dup1\n        /* \"#utility.yul\":1532:1544   */\n      revert\n        /* \"#utility.yul\":1483:1546   */\n    tag_77:\n        /* \"#utility.yul\":1430:1552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1697   */\n    tag_54:\n        /* \"#utility.yul\":1604:1609   */\n      0x00\n        /* \"#utility.yul\":1642:1648   */\n      dup2\n        /* \"#utility.yul\":1629:1649   */\n      calldataload\n        /* \"#utility.yul\":1620:1649   */\n      swap1\n      pop\n        /* \"#utility.yul\":1658:1691   */\n      tag_79\n        /* \"#utility.yul\":1685:1690   */\n      dup2\n        /* \"#utility.yul\":1658:1691   */\n      tag_53\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1558:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:2032   */\n    tag_22:\n        /* \"#utility.yul\":1762:1768   */\n      0x00\n        /* \"#utility.yul\":1811:1813   */\n      0x20\n        /* \"#utility.yul\":1799:1808   */\n      dup3\n        /* \"#utility.yul\":1790:1797   */\n      dup5\n        /* \"#utility.yul\":1786:1809   */\n      sub\n        /* \"#utility.yul\":1782:1814   */\n      slt\n        /* \"#utility.yul\":1779:1898   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1817:1896   */\n      tag_82\n      tag_50\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1779:1898   */\n    tag_81:\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1962:2015   */\n      tag_83\n        /* \"#utility.yul\":2007:2014   */\n      dup5\n        /* \"#utility.yul\":1998:2004   */\n      dup3\n        /* \"#utility.yul\":1987:1996   */\n      dup6\n        /* \"#utility.yul\":1983:2005   */\n      add\n        /* \"#utility.yul\":1962:2015   */\n      tag_54\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1952:2015   */\n      swap2\n      pop\n        /* \"#utility.yul\":1908:2025   */\n      pop\n        /* \"#utility.yul\":1703:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_55:\n        /* \"#utility.yul\":2125:2149   */\n      tag_85\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_52\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2494   */\n    tag_29:\n        /* \"#utility.yul\":2283:2287   */\n      0x00\n        /* \"#utility.yul\":2321:2323   */\n      0x40\n        /* \"#utility.yul\":2310:2319   */\n      dup3\n        /* \"#utility.yul\":2306:2324   */\n      add\n        /* \"#utility.yul\":2298:2324   */\n      swap1\n      pop\n        /* \"#utility.yul\":2334:2405   */\n      tag_87\n        /* \"#utility.yul\":2402:2403   */\n      0x00\n        /* \"#utility.yul\":2391:2400   */\n      dup4\n        /* \"#utility.yul\":2387:2404   */\n      add\n        /* \"#utility.yul\":2378:2384   */\n      dup6\n        /* \"#utility.yul\":2334:2405   */\n      tag_55\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2415:2487   */\n      tag_88\n        /* \"#utility.yul\":2483:2485   */\n      0x20\n        /* \"#utility.yul\":2472:2481   */\n      dup4\n        /* \"#utility.yul\":2468:2486   */\n      add\n        /* \"#utility.yul\":2459:2465   */\n      dup5\n        /* \"#utility.yul\":2415:2487   */\n      tag_55\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2162:2494   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2680   */\n    tag_56:\n        /* \"#utility.yul\":2548:2625   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2538:2626   */\n      mstore\n        /* \"#utility.yul\":2645:2649   */\n      0x12\n        /* \"#utility.yul\":2642:2643   */\n      0x04\n        /* \"#utility.yul\":2635:2650   */\n      mstore\n        /* \"#utility.yul\":2669:2673   */\n      0x24\n        /* \"#utility.yul\":2666:2667   */\n      0x00\n        /* \"#utility.yul\":2659:2674   */\n      revert\n        /* \"#utility.yul\":2872:3057   */\n    tag_37:\n        /* \"#utility.yul\":2912:2913   */\n      0x00\n        /* \"#utility.yul\":2929:2949   */\n      tag_92\n        /* \"#utility.yul\":2947:2948   */\n      dup3\n        /* \"#utility.yul\":2929:2949   */\n      tag_52\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2924:2949   */\n      swap2\n      pop\n        /* \"#utility.yul\":2963:2983   */\n      tag_93\n        /* \"#utility.yul\":2981:2982   */\n      dup4\n        /* \"#utility.yul\":2963:2983   */\n      tag_52\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2958:2983   */\n      swap3\n      pop\n        /* \"#utility.yul\":3002:3003   */\n      dup3\n        /* \"#utility.yul\":2992:3027   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":3007:3025   */\n      tag_95\n      tag_56\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2992:3027   */\n    tag_94:\n        /* \"#utility.yul\":3049:3050   */\n      dup3\n        /* \"#utility.yul\":3046:3047   */\n      dup3\n        /* \"#utility.yul\":3042:3051   */\n      div\n        /* \"#utility.yul\":3037:3051   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:3057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b068338d8b36b5937a4125e10b91071f287e300cf9ab5d5892d0ec9129fede6364736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a7640000341461001857600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061048d806100686000396000f3fe60806040526004361061004a5760003560e01c80633ccfd60b1461004f5780638da5cb5b14610066578063b2fa1c9e14610091578063f14faf6f146100bc578063f8626af8146100d8575b600080fd5b34801561005b57600080fd5b50610064610116565b005b34801561007257600080fd5b5061007b6101b9565b6040516100889190610306565b60405180910390f35b34801561009d57600080fd5b506100a66101df565b6040516100b3919061033c565b60405180910390f35b6100d660048036038101906100d19190610392565b6101e9565b005b3480156100e457600080fd5b506100ff60048036038101906100fa9190610392565b610277565b60405161010d9291906103ce565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156101b6573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000804714905090565b60006ec097ce7bc90715b34b9f1000000000905080826102099190610426565b341461021457600080fd5b61021c6102ab565b4281600001818152505082816020018181525050600081908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050505050565b6000818154811061028757600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b604051806040016040528060008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f0826102c5565b9050919050565b610300816102e5565b82525050565b600060208201905061031b60008301846102f7565b92915050565b60008115159050919050565b61033681610321565b82525050565b6000602082019050610351600083018461032d565b92915050565b600080fd5b6000819050919050565b61036f8161035c565b811461037a57600080fd5b50565b60008135905061038c81610366565b92915050565b6000602082840312156103a8576103a7610357565b5b60006103b68482850161037d565b91505092915050565b6103c88161035c565b82525050565b60006040820190506103e360008301856103bf565b6103f060208301846103bf565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006104318261035c565b915061043c8361035c565b92508261044c5761044b6103f7565b5b82820490509291505056fea2646970667358221220b068338d8b36b5937a4125e10b91071f287e300cf9ab5d5892d0ec9129fede6364736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH2 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x48D DUP1 PUSH2 0x68 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xF8626AF8 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP3 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 POP DUP1 DUP3 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21C PUSH2 0x2AB JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x300 DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x336 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x351 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x35C JUMP JUMPDEST DUP2 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A8 JUMPI PUSH2 0x3A7 PUSH2 0x357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B6 DUP5 DUP3 DUP6 ADD PUSH2 0x37D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x35C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x3F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x431 DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP2 POP PUSH2 0x43C DUP4 PUSH2 0x35C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH9 0x338D8B36B5937A4125 0xE1 SIGNEXTEND SWAP2 SMOD 0x1F 0x28 PUSH31 0x300CF9AB5D5892D0EC9129FEDE6364736F6C634300080F0033000000000000 ",
							"sourceMap": "61:936:0:-:0;;;301:7;288:9;:20;280:29;;;;;;330:10;322:5;;:18;;;;;;;;;;;;;;;;;;61:936;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@donate_88": {
									"entryPoint": 489,
									"id": 88,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donations_10": {
									"entryPoint": 631,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isComplete_42": {
									"entryPoint": 479,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_12": {
									"entryPoint": 441,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_112": {
									"entryPoint": 278,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3060:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "635:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "645:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "617:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "627:7:1",
														"type": ""
													}
												],
												"src": "593:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "758:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "758:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "736:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "743:3:1",
														"type": ""
													}
												],
												"src": "689:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "906:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "868:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "891:4:1",
														"type": ""
													}
												],
												"src": "804:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1060:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1053:6:1",
														"type": ""
													}
												],
												"src": "1020:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1413:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1402:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1374:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1384:7:1",
														"type": ""
													}
												],
												"src": "1347:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1530:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1539:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1542:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1532:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1532:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1496:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1521:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1503:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1503:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1493:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1493:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:43:1"
															},
															"nodeType": "YulIf",
															"src": "1483:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1466:5:1",
														"type": ""
													}
												],
												"src": "1430:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1610:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1620:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1642:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1629:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1620:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1685:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1658:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1658:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1588:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1604:5:1",
														"type": ""
													}
												],
												"src": "1558:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1815:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1817:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1817:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1817:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1799:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1811:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:32:1"
															},
															"nodeType": "YulIf",
															"src": "1779:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1908:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1923:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1937:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1927:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1952:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1987:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1998:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1983:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2007:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1962:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1952:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1739:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1750:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1762:6:1",
														"type": ""
													}
												],
												"src": "1703:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2091:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2098:3:1",
														"type": ""
													}
												],
												"src": "2038:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2288:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2298:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2310:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2298:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2378:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2391:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2402:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2334:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2334:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2459:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2472:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2483:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2468:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2415:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2252:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2264:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2272:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2283:4:1",
														"type": ""
													}
												],
												"src": "2162:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2528:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2545:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2548:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2538:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2635:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2666:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2659:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2659:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2500:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2714:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2734:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2724:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2831:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2821:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2845:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2845:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2686:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2914:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2924:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2947:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2929:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2929:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2924:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2958:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2981:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2963:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2963:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2958:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3005:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3007:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3007:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3007:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3002:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:9:1"
															},
															"nodeType": "YulIf",
															"src": "2992:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3037:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3046:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3049:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3042:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3037:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2903:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2906:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2912:1:1",
														"type": ""
													}
												],
												"src": "2872:185:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633ccfd60b1461004f5780638da5cb5b14610066578063b2fa1c9e14610091578063f14faf6f146100bc578063f8626af8146100d8575b600080fd5b34801561005b57600080fd5b50610064610116565b005b34801561007257600080fd5b5061007b6101b9565b6040516100889190610306565b60405180910390f35b34801561009d57600080fd5b506100a66101df565b6040516100b3919061033c565b60405180910390f35b6100d660048036038101906100d19190610392565b6101e9565b005b3480156100e457600080fd5b506100ff60048036038101906100fa9190610392565b610277565b60405161010d9291906103ce565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156101b6573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000804714905090565b60006ec097ce7bc90715b34b9f1000000000905080826102099190610426565b341461021457600080fd5b61021c6102ab565b4281600001818152505082816020018181525050600081908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050505050565b6000818154811061028757600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b604051806040016040528060008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f0826102c5565b9050919050565b610300816102e5565b82525050565b600060208201905061031b60008301846102f7565b92915050565b60008115159050919050565b61033681610321565b82525050565b6000602082019050610351600083018461032d565b92915050565b600080fd5b6000819050919050565b61036f8161035c565b811461037a57600080fd5b50565b60008135905061038c81610366565b92915050565b6000602082840312156103a8576103a7610357565b5b60006103b68482850161037d565b91505092915050565b6103c88161035c565b82525050565b60006040820190506103e360008301856103bf565b6103f060208301846103bf565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006104318261035c565b915061043c8361035c565b92508261044c5761044b6103f7565b5b82820490509291505056fea2646970667358221220b068338d8b36b5937a4125e10b91071f287e300cf9ab5d5892d0ec9129fede6364736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xF8626AF8 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x1DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP3 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP1 POP DUP1 DUP3 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x426 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21C PUSH2 0x2AB JUMP JUMPDEST TIMESTAMP DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x300 DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x336 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x351 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x35C JUMP JUMPDEST DUP2 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A8 JUMPI PUSH2 0x3A7 PUSH2 0x357 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B6 DUP5 DUP3 DUP6 ADD PUSH2 0x37D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x35C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x3F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x431 DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP2 POP PUSH2 0x43C DUP4 PUSH2 0x35C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x3F7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH9 0x338D8B36B5937A4125 0xE1 SIGNEXTEND SWAP2 SMOD 0x1F 0x28 PUSH31 0x300CF9AB5D5892D0EC9129FEDE6364736F6C634300080F0033000000000000 ",
							"sourceMap": "61:936:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:146;;;;;;;;;;;;;:::i;:::-;;219:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;354:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;463:377;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;183:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;848:146;908:5;;;;;;;;;;;894:19;;:10;:19;;;886:28;;;;;;943:10;935:28;;:51;964:21;935:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:146::o;219:20::-;;;;;;;;;;;;;:::o;354:101::-;397:4;446:1;421:21;:26;414:33;;354:101;:::o;463:377::-;582:13;598:16;582:32;;660:5;646:11;:19;;;;:::i;:::-;633:9;:32;625:41;;;;;;679:24;;:::i;:::-;735:15;714:8;:18;;:36;;;;;784:11;761:8;:20;;:34;;;;;808:9;823:8;808:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:325;;463:377;:::o;183:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:77;1384:7;1413:5;1402:16;;1347:77;;;:::o;1430:122::-;1503:24;1521:5;1503:24;:::i;:::-;1496:5;1493:35;1483:63;;1542:1;1539;1532:12;1483:63;1430:122;:::o;1558:139::-;1604:5;1642:6;1629:20;1620:29;;1658:33;1685:5;1658:33;:::i;:::-;1558:139;;;;:::o;1703:329::-;1762:6;1811:2;1799:9;1790:7;1786:23;1782:32;1779:119;;;1817:79;;:::i;:::-;1779:119;1937:1;1962:53;2007:7;1998:6;1987:9;1983:22;1962:53;:::i;:::-;1952:63;;1908:117;1703:329;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:332::-;2283:4;2321:2;2310:9;2306:18;2298:26;;2334:71;2402:1;2391:9;2387:17;2378:6;2334:71;:::i;:::-;2415:72;2483:2;2472:9;2468:18;2459:6;2415:72;:::i;:::-;2162:332;;;;;:::o;2500:180::-;2548:77;2545:1;2538:88;2645:4;2642:1;2635:15;2669:4;2666:1;2659:15;2872:185;2912:1;2929:20;2947:1;2929:20;:::i;:::-;2924:25;;2963:20;2981:1;2963:20;:::i;:::-;2958:25;;3002:1;2992:35;;3007:18;;:::i;:::-;2992:35;3049:1;3046;3042:9;3037:14;;2872:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "233000",
								"executionCost": "24539",
								"totalCost": "257539"
							},
							"external": {
								"donate(uint256)": "infinite",
								"donations(uint256)": "infinite",
								"isComplete()": "373",
								"owner()": "2514",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 997,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 997,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 997,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 301,
									"end": 308,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 288,
									"end": 297,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 308,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 280,
									"end": 309,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 280,
									"end": 309,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 280,
									"end": 309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 309,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 280,
									"end": 309,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 280,
									"end": 309,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 330,
									"end": 340,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 322,
									"end": 327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 322,
									"end": 327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 322,
									"end": 340,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 322,
									"end": 340,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 322,
									"end": 340,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 322,
									"end": 340,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 322,
									"end": 340,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 997,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 997,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 997,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 997,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b068338d8b36b5937a4125e10b91071f287e300cf9ab5d5892d0ec9129fede6364736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA1C9E"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "F14FAF6F"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "F8626AF8"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 848,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 848,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 848,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 848,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 848,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 848,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 219,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 219,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 354,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 354,
											"end": 455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 463,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 463,
											"end": 840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 463,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 463,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 463,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 183,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 183,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 183,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 848,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 908,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 908,
											"end": 913,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 908,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 894,
											"end": 904,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 894,
											"end": 913,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 886,
											"end": 914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 914,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 886,
											"end": 914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 953,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 935,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 964,
											"end": 985,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 935,
											"end": 986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 935,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 935,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 219,
											"end": 239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 354,
											"end": 455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 442,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 421,
											"end": 447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 414,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 463,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 582,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 646,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 646,
											"end": 665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 646,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 665,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 646,
											"end": 665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 665,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 625,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 625,
											"end": 666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 625,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 625,
											"end": 666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 625,
											"end": 666,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 625,
											"end": 666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 679,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 679,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 750,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 714,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 714,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 784,
											"end": 795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 761,
											"end": 769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 515,
											"end": 840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 515,
											"end": 840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 463,
											"end": 840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 183,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1424,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1347,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1552,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1430,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1503,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1544,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1483,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1649,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1685,
											"end": 1690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1658,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1658,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1809,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1814,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1817,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2007,
											"end": 2014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1962,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1962,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2494,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2162,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2334,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2405,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2334,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2415,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2487,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2415,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2494,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2500,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2625,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2649,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2666,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3057,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2872,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2947,
											"end": 2948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2929,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2963,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2992,
											"end": 3027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3007,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3027,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2992,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3057,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"math/DonationChallenge.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate(uint256)": "f14faf6f",
							"donations(uint256)": "f8626af8",
							"isComplete()": "b2fa1c9e",
							"owner()": "8da5cb5b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"math/DonationChallenge.sol\":\"DonationChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"math/DonationChallenge.sol\":{\"keccak256\":\"0x97c3e525f84296c3b8c56b9e7a891cb52645ff95d0a78548adad231535fd5785\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fed9a7a8c42e3675c39b00eaaa99b29a255f1e4763e231dc0740a0e8eeb431fa\",\"dweb:/ipfs/QmYCK3CgochkaQDwbL9A4ePjEiK8KSMgrT1LyPE5mLi2Mt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "math/DonationChallenge.sol:DonationChallenge",
								"label": "donations",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Donation)6_storage)dyn_storage"
							},
							{
								"astId": 12,
								"contract": "math/DonationChallenge.sol:DonationChallenge",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Donation)6_storage)dyn_storage": {
								"base": "t_struct(Donation)6_storage",
								"encoding": "dynamic_array",
								"label": "struct DonationChallenge.Donation[]",
								"numberOfBytes": "32"
							},
							"t_struct(Donation)6_storage": {
								"encoding": "inplace",
								"label": "struct DonationChallenge.Donation",
								"members": [
									{
										"astId": 3,
										"contract": "math/DonationChallenge.sol:DonationChallenge",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "math/DonationChallenge.sol:DonationChallenge",
										"label": "etherAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"math/DonationChallenge.sol": {
				"ast": {
					"absolutePath": "math/DonationChallenge.sol",
					"exportedSymbols": {
						"DonationChallenge": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DonationChallenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "DonationChallenge",
							"nameLocation": "70:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DonationChallenge.Donation",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "130:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "122:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "122:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "etherAmount",
											"nameLocation": "158:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "150:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "150:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Donation",
									"nameLocation": "102:8:0",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "95:82:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8626af8",
									"id": 10,
									"mutability": "mutable",
									"name": "donations",
									"nameLocation": "201:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 113,
									"src": "183:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Donation_$6_storage_$dyn_storage",
										"typeString": "struct DonationChallenge.Donation[]"
									},
									"typeName": {
										"baseType": {
											"id": 8,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 7,
												"name": "Donation",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "183:8:0"
											},
											"referencedDeclaration": 6,
											"src": "183:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
												"typeString": "struct DonationChallenge.Donation"
											}
										},
										"id": 9,
										"nodeType": "ArrayTypeName",
										"src": "183:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Donation_$6_storage_$dyn_storage_ptr",
											"typeString": "struct DonationChallenge.Donation[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 12,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "234:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 113,
									"src": "219:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "219:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "269:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "288:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "288:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "301:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "288:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "280:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "280:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "280:29:0"
											},
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "322:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 23,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "330:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "322:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "322:18:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:0:0"
									},
									"scope": 113,
									"src": "248:100:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "403:52:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 35,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "429:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DonationChallenge_$113",
																		"typeString": "contract DonationChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DonationChallenge_$113",
																		"typeString": "contract DonationChallenge"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "421:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "421:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "421:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "421:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "446:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "421:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 40,
												"nodeType": "Return",
												"src": "414:33:0"
											}
										]
									},
									"functionSelector": "b2fa1c9e",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isComplete",
									"nameLocation": "363:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "397:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:6:0"
									},
									"scope": 113,
									"src": "354:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "515:325:0",
										"statements": [
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "scale",
														"nameLocation": "590:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "582:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
														"typeString": "int_const 1000...(29 digits omitted)...0000"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "598:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "602:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "598:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "607:7:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "598:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
														"typeString": "int_const 1000...(29 digits omitted)...0000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "582:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 56,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "633:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "633:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 58,
																	"name": "etherAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "646:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 59,
																	"name": "scale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "660:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "646:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "633:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "625:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "625:41:0"
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "donation",
														"nameLocation": "695:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "679:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Donation_$6_memory_ptr",
															"typeString": "struct DonationChallenge.Donation"
														},
														"typeName": {
															"id": 65,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 64,
																"name": "Donation",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "679:8:0"
															},
															"referencedDeclaration": 6,
															"src": "679:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
																"typeString": "struct DonationChallenge.Donation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"nodeType": "VariableDeclarationStatement",
												"src": "679:24:0"
											},
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 68,
															"name": "donation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "714:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_memory_ptr",
																"typeString": "struct DonationChallenge.Donation memory"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "714:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 71,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "735:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "735:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "714:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "714:36:0"
											},
											{
												"expression": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 75,
															"name": "donation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "761:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_memory_ptr",
																"typeString": "struct DonationChallenge.Donation memory"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "etherAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "761:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 78,
														"name": "etherAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "784:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "761:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "761:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 84,
															"name": "donation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "823:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_memory_ptr",
																"typeString": "struct DonationChallenge.Donation memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Donation_$6_memory_ptr",
																"typeString": "struct DonationChallenge.Donation memory"
															}
														],
														"expression": {
															"id": 81,
															"name": "donations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "808:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Donation_$6_storage_$dyn_storage",
																"typeString": "struct DonationChallenge.Donation storage ref[] storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "808:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Donation_$6_storage_$dyn_storage_ptr_$_t_struct$_Donation_$6_storage_$returns$__$bound_to$_t_array$_t_struct$_Donation_$6_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DonationChallenge.Donation storage ref[] storage pointer,struct DonationChallenge.Donation storage ref)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "808:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "808:24:0"
											}
										]
									},
									"functionSelector": "f14faf6f",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "472:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "etherAmount",
												"nameLocation": "487:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "479:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:21:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:0:0"
									},
									"scope": 113,
									"src": "463:377:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "875:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 92,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "894:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "894:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 94,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "908:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "894:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "886:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 106,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "972:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DonationChallenge_$113",
																			"typeString": "contract DonationChallenge"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DonationChallenge_$113",
																			"typeString": "contract DonationChallenge"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "964:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "964:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "964:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 100,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "943:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "943:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "935:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 98,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "935:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "935:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "935:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "935:51:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "857:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:0"
									},
									"scope": 113,
									"src": "848:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 114,
							"src": "61:936:0",
							"usedErrors": []
						}
					],
					"src": "33:964:0"
				},
				"id": 0
			}
		}
	}
}