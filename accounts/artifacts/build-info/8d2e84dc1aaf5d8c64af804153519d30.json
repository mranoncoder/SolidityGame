{
	"id": "8d2e84dc1aaf5d8c64af804153519d30",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"accounts/PublicKeyChallenge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ncontract PublicKeyChallenge {\r\n    address owner = 0x92b28647Ae1F3264661f72fb2eB9625A89D88A31;\r\n    bool public isComplete;\r\n\r\n    function authenticate(bytes memory publicKey) public {\r\n        require(address(uint160(uint256(keccak256(publicKey)))) == owner);\r\n        isComplete = true;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"accounts/PublicKeyChallenge.sol": {
				"PublicKeyChallenge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "publicKey",
									"type": "bytes"
								}
							],
							"name": "authenticate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"accounts/PublicKeyChallenge.sol\":61:360  contract PublicKeyChallenge {... */\n  mstore(0x40, 0x80)\n    /* \"accounts/PublicKeyChallenge.sol\":96:154  address owner = 0x92b28647Ae1F3264661f72fb2eB9625A89D88A31 */\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"accounts/PublicKeyChallenge.sol\":112:154  0x92b28647Ae1F3264661f72fb2eB9625A89D88A31 */\n  0x92b28647ae1f3264661f72fb2eb9625a89d88a31\n    /* \"accounts/PublicKeyChallenge.sol\":96:154  address owner = 0x92b28647Ae1F3264661f72fb2eB9625A89D88A31 */\n  or\n  swap1\n  sstore\n    /* \"accounts/PublicKeyChallenge.sol\":61:360  contract PublicKeyChallenge {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"accounts/PublicKeyChallenge.sol\":61:360  contract PublicKeyChallenge {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xee0d605c\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"accounts/PublicKeyChallenge.sol\":161:183  bool public isComplete */\n    tag_3:\n      sload(0x00)\n      tag_5\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"accounts/PublicKeyChallenge.sol\":161:183  bool public isComplete */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"accounts/PublicKeyChallenge.sol\":192:357  function authenticate(bytes memory publicKey) public {... */\n    tag_4:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n    tag_12:\n        /* \"accounts/PublicKeyChallenge.sol\":315:320  owner */\n      sload(0x00)\n        /* \"accounts/PublicKeyChallenge.sol\":288:308  keccak256(publicKey) */\n      dup2\n      mload\n      0x20\n      dup4\n      add\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"accounts/PublicKeyChallenge.sol\":264:320  address(uint160(uint256(keccak256(publicKey)))) == owner */\n      swap1\n      dup2\n      and\n        /* \"accounts/PublicKeyChallenge.sol\":315:320  owner */\n      swap2\n      and\n        /* \"accounts/PublicKeyChallenge.sol\":264:320  address(uint160(uint256(keccak256(publicKey)))) == owner */\n      eq\n        /* \"accounts/PublicKeyChallenge.sol\":256:321  require(address(uint160(uint256(keccak256(publicKey)))) == owner) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n        /* \"accounts/PublicKeyChallenge.sol\":332:342  isComplete */\n      0x00\n        /* \"accounts/PublicKeyChallenge.sol\":332:349  isComplete = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"accounts/PublicKeyChallenge.sol\":192:357  function authenticate(bytes memory publicKey) public {... */\n      jump\t// out\n        /* \"#utility.yul\":206:333   */\n    tag_15:\n        /* \"#utility.yul\":267:277   */\n      0x4e487b71\n        /* \"#utility.yul\":262:265   */\n      0xe0\n        /* \"#utility.yul\":258:278   */\n      shl\n        /* \"#utility.yul\":255:256   */\n      0x00\n        /* \"#utility.yul\":248:279   */\n      mstore\n        /* \"#utility.yul\":298:302   */\n      0x41\n        /* \"#utility.yul\":295:296   */\n      0x04\n        /* \"#utility.yul\":288:303   */\n      mstore\n        /* \"#utility.yul\":322:326   */\n      0x24\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":312:327   */\n      revert\n        /* \"#utility.yul\":338:1259   */\n    tag_11:\n        /* \"#utility.yul\":406:412   */\n      0x00\n        /* \"#utility.yul\":459:461   */\n      0x20\n        /* \"#utility.yul\":447:456   */\n      dup3\n        /* \"#utility.yul\":438:445   */\n      dup5\n        /* \"#utility.yul\":434:457   */\n      sub\n        /* \"#utility.yul\":430:462   */\n      slt\n        /* \"#utility.yul\":427:479   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":475:476   */\n      0x00\n        /* \"#utility.yul\":472:473   */\n      dup1\n        /* \"#utility.yul\":465:477   */\n      revert\n        /* \"#utility.yul\":427:479   */\n    tag_20:\n        /* \"#utility.yul\":515:524   */\n      dup2\n        /* \"#utility.yul\":502:525   */\n      calldataload\n        /* \"#utility.yul\":544:562   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":585:587   */\n      dup1\n        /* \"#utility.yul\":577:583   */\n      dup3\n        /* \"#utility.yul\":574:588   */\n      gt\n        /* \"#utility.yul\":571:605   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":601:602   */\n      0x00\n        /* \"#utility.yul\":598:599   */\n      dup1\n        /* \"#utility.yul\":591:603   */\n      revert\n        /* \"#utility.yul\":571:605   */\n    tag_21:\n        /* \"#utility.yul\":639:645   */\n      dup2\n        /* \"#utility.yul\":628:637   */\n      dup5\n        /* \"#utility.yul\":624:646   */\n      add\n        /* \"#utility.yul\":614:646   */\n      swap2\n      pop\n        /* \"#utility.yul\":684:691   */\n      dup5\n        /* \"#utility.yul\":677:681   */\n      0x1f\n        /* \"#utility.yul\":673:675   */\n      dup4\n        /* \"#utility.yul\":669:682   */\n      add\n        /* \"#utility.yul\":665:692   */\n      slt\n        /* \"#utility.yul\":655:710   */\n      tag_22\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":655:710   */\n    tag_22:\n        /* \"#utility.yul\":742:744   */\n      dup2\n        /* \"#utility.yul\":729:745   */\n      calldataload\n        /* \"#utility.yul\":764:766   */\n      dup2\n        /* \"#utility.yul\":760:762   */\n      dup2\n        /* \"#utility.yul\":757:767   */\n      gt\n        /* \"#utility.yul\":754:790   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":770:788   */\n      tag_24\n      tag_15\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":845:847   */\n      0x40\n        /* \"#utility.yul\":839:848   */\n      mload\n        /* \"#utility.yul\":813:815   */\n      0x1f\n        /* \"#utility.yul\":899:912   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":895:917   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":919:921   */\n      0x3f\n        /* \"#utility.yul\":891:922   */\n      add\n        /* \"#utility.yul\":887:927   */\n      and\n        /* \"#utility.yul\":875:928   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":943:961   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":963:985   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":940:986   */\n      or\n        /* \"#utility.yul\":937:1009   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":989:1007   */\n      tag_26\n      tag_15\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":1029:1039   */\n      dup2\n        /* \"#utility.yul\":1025:1027   */\n      0x40\n        /* \"#utility.yul\":1018:1040   */\n      mstore\n        /* \"#utility.yul\":1064:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1062   */\n      dup2\n        /* \"#utility.yul\":1049:1067   */\n      mstore\n        /* \"#utility.yul\":1104:1111   */\n      dup8\n        /* \"#utility.yul\":1099:1101   */\n      0x20\n        /* \"#utility.yul\":1094:1096   */\n      dup5\n        /* \"#utility.yul\":1090:1092   */\n      dup8\n        /* \"#utility.yul\":1086:1097   */\n      add\n        /* \"#utility.yul\":1082:1102   */\n      add\n        /* \"#utility.yul\":1079:1112   */\n      gt\n        /* \"#utility.yul\":1076:1129   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1125:1126   */\n      0x00\n        /* \"#utility.yul\":1122:1123   */\n      dup1\n        /* \"#utility.yul\":1115:1127   */\n      revert\n        /* \"#utility.yul\":1076:1129   */\n    tag_27:\n        /* \"#utility.yul\":1181:1183   */\n      dup3\n        /* \"#utility.yul\":1176:1178   */\n      0x20\n        /* \"#utility.yul\":1172:1174   */\n      dup7\n        /* \"#utility.yul\":1168:1179   */\n      add\n        /* \"#utility.yul\":1163:1165   */\n      0x20\n        /* \"#utility.yul\":1155:1161   */\n      dup4\n        /* \"#utility.yul\":1151:1166   */\n      add\n        /* \"#utility.yul\":1138:1184   */\n      calldatacopy\n        /* \"#utility.yul\":1226:1227   */\n      0x00\n        /* \"#utility.yul\":1204:1219   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1221:1223   */\n      0x20\n        /* \"#utility.yul\":1200:1224   */\n      add\n        /* \"#utility.yul\":1193:1228   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":1208:1214   */\n      swap6\n        /* \"#utility.yul\":338:1259   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b93cadf7dc735f4a0b8a30ef38d1e239c44515509248865f8ccb10d0957cfb5564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600080546001600160a01b0319167392b28647ae1f3264661f72fb2eb9625a89d88a3117905534801561003657600080fd5b506101ac806100466000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b2fa1c9e1461003b578063ee0d605c14610063575b600080fd5b60005461004f90600160a01b900460ff1681565b604051901515815260200160405180910390f35b6100766100713660046100c5565b610078565b005b600054815160208301206001600160a01b0390811691161461009957600080fd5b506000805460ff60a01b1916600160a01b179055565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100d757600080fd5b813567ffffffffffffffff808211156100ef57600080fd5b818401915084601f83011261010357600080fd5b813581811115610115576101156100af565b604051601f8201601f19908116603f0116810190838211818310171561013d5761013d6100af565b8160405282815287602084870101111561015657600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220b93cadf7dc735f4a0b8a30ef38d1e239c44515509248865f8ccb10d0957cfb5564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x92B28647AE1F3264661F72FB2EB9625A89D88A31 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC DUP1 PUSH2 0x46 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEE0D605C EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4F SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x115 JUMPI PUSH2 0x115 PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13D JUMPI PUSH2 0x13D PUSH2 0xAF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 EXTCODECOPY 0xAD 0xF7 0xDC PUSH20 0x5F4A0B8A30EF38D1E239C44515509248865F8CCB LT 0xD0 SWAP6 PUSH29 0xFB5564736F6C634300080F003300000000000000000000000000000000 ",
							"sourceMap": "61:299:0:-:0;;;96:58;;;-1:-1:-1;;;;;;96:58:0;112:42;96:58;;;61:299;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@authenticate_33": {
									"entryPoint": 120,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isComplete_6": {
									"entryPoint": null,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1261:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "238:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "262:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "267:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "258:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "248:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "295:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "298:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "288:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "322:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "312:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "312:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "206:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "417:842:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "472:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "475:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "465:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "438:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "447:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "434:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "459:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:32:1"
															},
															"nodeType": "YulIf",
															"src": "427:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "488:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "515:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "502:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "492:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "544:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "538:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "589:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "598:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "601:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "591:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "591:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "591:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "577:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "585:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "574:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:14:1"
															},
															"nodeType": "YulIf",
															"src": "571:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "614:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "628:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "639:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "624:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "618:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "673:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "677:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "669:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "669:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "684:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:35:1"
															},
															"nodeType": "YulIf",
															"src": "655:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "742:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "729:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "723:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "768:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "760:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "764:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "757:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:10:1"
															},
															"nodeType": "YulIf",
															"src": "754:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "799:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "803:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "825:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "839:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "829:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "857:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "879:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "903:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "907:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "899:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "899:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "914:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "895:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "919:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "891:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "924:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "887:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "887:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "861:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "987:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "989:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "989:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "989:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "946:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "958:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "943:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "966:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "978:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "963:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "940:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:46:1"
															},
															"nodeType": "YulIf",
															"src": "937:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1025:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1029:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1018:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1018:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1056:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1064:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1049:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1113:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1122:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1125:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1115:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1115:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1115:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1090:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1094:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1086:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1086:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1099:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1082:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1104:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1079:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:33:1"
															},
															"nodeType": "YulIf",
															"src": "1076:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1155:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1151:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1172:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1176:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1181:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1138:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1138:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1208:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1216:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1204:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1204:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1221:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1226:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1237:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1247:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "383:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "394:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "406:6:1",
														"type": ""
													}
												],
												"src": "338:921:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063b2fa1c9e1461003b578063ee0d605c14610063575b600080fd5b60005461004f90600160a01b900460ff1681565b604051901515815260200160405180910390f35b6100766100713660046100c5565b610078565b005b600054815160208301206001600160a01b0390811691161461009957600080fd5b506000805460ff60a01b1916600160a01b179055565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100d757600080fd5b813567ffffffffffffffff808211156100ef57600080fd5b818401915084601f83011261010357600080fd5b813581811115610115576101156100af565b604051601f8201601f19908116603f0116810190838211818310171561013d5761013d6100af565b8160405282815287602084870101111561015657600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220b93cadf7dc735f4a0b8a30ef38d1e239c44515509248865f8ccb10d0957cfb5564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEE0D605C EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4F SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x115 JUMPI PUSH2 0x115 PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13D JUMPI PUSH2 0x13D PUSH2 0xAF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 EXTCODECOPY 0xAD 0xF7 0xDC PUSH20 0x5F4A0B8A30EF38D1E239C44515509248865F8CCB LT 0xD0 SWAP6 PUSH29 0xFB5564736F6C634300080F003300000000000000000000000000000000 ",
							"sourceMap": "61:299:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:22;;;;;-1:-1:-1;;;161:22:0;;;;;;;;;179:14:1;;172:22;154:41;;142:2;127:18;161:22:0;;;;;;;192:165;;;;;;:::i;:::-;;:::i;:::-;;;315:5;;288:20;;;;;;-1:-1:-1;;;;;264:56:0;;;315:5;;264:56;256:65;;;;;;-1:-1:-1;332:10:0;:17;;-1:-1:-1;;;;332:17:0;-1:-1:-1;;;332:17:0;;;192:165::o;206:127:1:-;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:921;406:6;459:2;447:9;438:7;434:23;430:32;427:52;;;475:1;472;465:12;427:52;515:9;502:23;544:18;585:2;577:6;574:14;571:34;;;601:1;598;591:12;571:34;639:6;628:9;624:22;614:32;;684:7;677:4;673:2;669:13;665:27;655:55;;706:1;703;696:12;655:55;742:2;729:16;764:2;760;757:10;754:36;;;770:18;;:::i;:::-;845:2;839:9;813:2;899:13;;-1:-1:-1;;895:22:1;;;919:2;891:31;887:40;875:53;;;943:18;;;963:22;;;940:46;937:72;;;989:18;;:::i;:::-;1029:10;1025:2;1018:22;1064:2;1056:6;1049:18;1104:7;1099:2;1094;1090;1086:11;1082:20;1079:33;1076:53;;;1125:1;1122;1115:12;1076:53;1181:2;1176;1172;1168:11;1163:2;1155:6;1151:15;1138:46;1226:1;1204:15;;;1221:2;1200:24;1193:35;;;;-1:-1:-1;1208:6:1;338:921;-1:-1:-1;;;;;338:921:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "85600",
								"executionCost": "24371",
								"totalCost": "109971"
							},
							"external": {
								"authenticate(bytes)": "infinite",
								"isComplete()": "2293"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 96,
									"end": 154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 112,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "92B28647AE1F3264661F72FB2EB9625A89D88A31"
								},
								{
									"begin": 96,
									"end": 154,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 96,
									"end": 154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 360,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b93cadf7dc735f4a0b8a30ef38d1e239c44515509248865f8ccb10d0957cfb5564736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA1C9E"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "EE0D605C"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 161,
											"end": 183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 161,
											"end": 183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 161,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 183,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 192,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 288,
											"end": 308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 264,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 264,
											"end": 320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 264,
											"end": 320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 256,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 256,
											"end": 321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 256,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 256,
											"end": 321,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 256,
											"end": 321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 332,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 332,
											"end": 349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 332,
											"end": 349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 332,
											"end": 349,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 332,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 332,
											"end": 349,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 333,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 206,
											"end": 333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 267,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 262,
											"end": 265,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 258,
											"end": 278,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 255,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 298,
											"end": 302,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 295,
											"end": 296,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 322,
											"end": 326,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 338,
											"end": 1259,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 338,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 438,
											"end": 445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 434,
											"end": 457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 430,
											"end": 462,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 475,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 465,
											"end": 477,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 427,
											"end": 479,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 515,
											"end": 524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 544,
											"end": 562,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 574,
											"end": 588,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 571,
											"end": 605,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 571,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 601,
											"end": 602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 591,
											"end": 603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 571,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 571,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 624,
											"end": 646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 691,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 677,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 673,
											"end": 675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 669,
											"end": 682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 665,
											"end": 692,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 655,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 655,
											"end": 710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 655,
											"end": 710,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 655,
											"end": 710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 729,
											"end": 745,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 764,
											"end": 766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 760,
											"end": 762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 757,
											"end": 767,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 754,
											"end": 790,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 754,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 754,
											"end": 790,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 770,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 770,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 770,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 770,
											"end": 788,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 770,
											"end": 788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 848,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 899,
											"end": 912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 899,
											"end": 912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 895,
											"end": 917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 891,
											"end": 922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 875,
											"end": 928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 875,
											"end": 928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 875,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 943,
											"end": 961,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 943,
											"end": 961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 943,
											"end": 961,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 963,
											"end": 985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 963,
											"end": 985,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 963,
											"end": 985,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 940,
											"end": 986,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 937,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 989,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 989,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1112,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1129,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1076,
											"end": 1129,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1127,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1076,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1184,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 338,
											"end": 1259,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 338,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"accounts/PublicKeyChallenge.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authenticate(bytes)": "ee0d605c",
							"isComplete()": "b2fa1c9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"authenticate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"accounts/PublicKeyChallenge.sol\":\"PublicKeyChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"accounts/PublicKeyChallenge.sol\":{\"keccak256\":\"0xee8bf4e0235e931de688168136c3f4ca99104d02df3587f630bd55f47c9b433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d05cb1fb4418d92d441ee7a59341e6f22619579897d35b9a94e0b590300944a7\",\"dweb:/ipfs/QmTmjdgFip5ByA23TDYMTcHSHj5uhLedtcEULrnP8TgKSy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "accounts/PublicKeyChallenge.sol:PublicKeyChallenge",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 6,
								"contract": "accounts/PublicKeyChallenge.sol:PublicKeyChallenge",
								"label": "isComplete",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"accounts/PublicKeyChallenge.sol": {
				"ast": {
					"absolutePath": "accounts/PublicKeyChallenge.sol",
					"exportedSymbols": {
						"PublicKeyChallenge": [
							34
						]
					},
					"id": 35,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PublicKeyChallenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "PublicKeyChallenge",
							"nameLocation": "70:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "104:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 34,
									"src": "96:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "96:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839326232383634374165314633323634363631663732666232654239363235413839443838413331",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "112:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x92b28647Ae1F3264661f72fb2eB9625A89D88A31"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "b2fa1c9e",
									"id": 6,
									"mutability": "mutable",
									"name": "isComplete",
									"nameLocation": "173:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 34,
									"src": "161:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 5,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "161:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "245:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 19,
																								"name": "publicKey",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 8,
																								"src": "298:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 18,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967288,
																							"src": "288:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 20,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "288:20:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 17,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "280:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 16,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "280:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 21,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "280:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 15,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "272:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 14,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "272:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 22,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "272:38:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 13,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "264:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 12,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "264:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "264:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 24,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "315:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "264:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "256:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "256:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "256:65:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "isComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "332:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "345:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "332:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "332:17:0"
											}
										]
									},
									"functionSelector": "ee0d605c",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "authenticate",
									"nameLocation": "201:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "publicKey",
												"nameLocation": "227:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "214:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 7,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "214:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:24:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:0"
									},
									"scope": 34,
									"src": "192:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 35,
							"src": "61:299:0",
							"usedErrors": []
						}
					],
					"src": "33:327:0"
				},
				"id": 0
			}
		}
	}
}