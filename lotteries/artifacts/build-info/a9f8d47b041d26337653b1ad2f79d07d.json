{
	"id": "a9f8d47b041d26337653b1ad2f79d07d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"lotteries/GuessTheNewNumberChallenge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ncontract GuessTheNewNumberChallenge {\r\n    constructor() payable{\r\n       require(msg.value == 1 ether);\r\n    }\r\n\r\n    function isComplete() public view returns (bool) {\r\n        return address(this).balance == 0;\r\n    }\r\n\r\n    function guess(uint8 n) public payable {\r\n        require(msg.value == 1 ether);\r\n        \r\n        uint8 answer = uint8(uint256(\r\n        keccak256(abi.encodePacked(blockhash(block.number - 1), block.timestamp))\r\n        ));\r\n\r\n        if (n == answer) {\r\n            payable(msg.sender).transfer(2 ether);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lotteries/GuessTheNewNumberChallenge.sol": {
				"GuessTheNewNumberChallenge": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "n",
									"type": "uint8"
								}
							],
							"name": "guess",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lotteries/GuessTheNewNumberChallenge.sol\":61:617  contract GuessTheNewNumberChallenge {... */\n  mstore(0x40, 0x80)\n    /* \"lotteries/GuessTheNewNumberChallenge.sol\":143:152  msg.value */\n  callvalue\n    /* \"lotteries/GuessTheNewNumberChallenge.sol\":156:163  1 ether */\n  0x0de0b6b3a7640000\n    /* \"lotteries/GuessTheNewNumberChallenge.sol\":143:163  msg.value == 1 ether */\n  eq\n    /* \"lotteries/GuessTheNewNumberChallenge.sol\":135:164  require(msg.value == 1 ether) */\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n    /* \"lotteries/GuessTheNewNumberChallenge.sol\":61:617  contract GuessTheNewNumberChallenge {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":61:617  contract GuessTheNewNumberChallenge {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4ba4c16b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":289:614  function guess(uint8 n) public payable {... */\n    tag_2:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":180:281  function isComplete() public view returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      0x40\n      dup1\n      mload\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":247:268  address(this).balance */\n      selfbalance\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":247:273  address(this).balance == 0 */\n      iszero\n        /* \"#utility.yul\":428:469   */\n      dup2\n      mstore\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":180:281  function isComplete() public view returns (bool) {... */\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":416:418   */\n      0x20\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":180:281  function isComplete() public view returns (bool) {... */\n      add\n      swap1\n      return\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":289:614  function guess(uint8 n) public payable {... */\n    tag_7:\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":347:356  msg.value */\n      callvalue\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":360:367  1 ether */\n      0x0de0b6b3a7640000\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":347:367  msg.value == 1 ether */\n      eq\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":339:368  require(msg.value == 1 ether) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":389:401  uint8 answer */\n      0x00\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":465:481  block.number - 1 */\n      tag_15\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":480:481  1 */\n      0x01\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":465:477  block.number */\n      number\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":465:481  block.number - 1 */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":438:500  abi.encodePacked(blockhash(block.number - 1), block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":455:482  blockhash(block.number - 1) */\n      swap2\n      blockhash\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":438:500  abi.encodePacked(blockhash(block.number - 1), block.timestamp) */\n      0x20\n      dup4\n      add\n        /* \"#utility.yul\":864:883   */\n      mstore\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":484:499  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":899:911   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":892:920   */\n      mstore\n        /* \"#utility.yul\":936:948   */\n      0x60\n      add\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":438:500  abi.encodePacked(blockhash(block.number - 1), block.timestamp) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":428:501  keccak256(abi.encodePacked(blockhash(block.number - 1), block.timestamp)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":410:512  uint256(... */\n      0x00\n      shr\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":389:513  uint8 answer = uint8(uint256(... */\n      swap1\n      pop\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":535:541  answer */\n      dup1\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":530:541  n == answer */\n      0xff\n      and\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":530:531  n */\n      dup3\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":530:541  n == answer */\n      0xff\n      and\n      sub\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":526:607  if (n == answer) {... */\n      tag_19\n      jumpi\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":558:595  payable(msg.sender).transfer(2 ether) */\n      mload(0x40)\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":566:576  msg.sender */\n      caller\n      swap1\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":558:595  payable(msg.sender).transfer(2 ether) */\n      0x00\n      swap1\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":587:594  2 ether */\n      0x1bc16d674ec80000\n      swap1\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":558:595  payable(msg.sender).transfer(2 ether) */\n      dup3\n      dup2\n      dup2\n      dup2\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":587:594  2 ether */\n      dup6\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":566:576  msg.sender */\n      dup9\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":558:595  payable(msg.sender).transfer(2 ether) */\n      dup4\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":526:607  if (n == answer) {... */\n    tag_19:\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":328:614  {... */\n      pop\n        /* \"lotteries/GuessTheNewNumberChallenge.sol\":289:614  function guess(uint8 n) public payable {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:283   */\n    tag_6:\n        /* \"#utility.yul\":71:77   */\n      0x00\n        /* \"#utility.yul\":124:126   */\n      0x20\n        /* \"#utility.yul\":112:121   */\n      dup3\n        /* \"#utility.yul\":103:110   */\n      dup5\n        /* \"#utility.yul\":99:122   */\n      sub\n        /* \"#utility.yul\":95:127   */\n      slt\n        /* \"#utility.yul\":92:144   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":140:141   */\n      0x00\n        /* \"#utility.yul\":137:138   */\n      dup1\n        /* \"#utility.yul\":130:142   */\n      revert\n        /* \"#utility.yul\":92:144   */\n    tag_25:\n        /* \"#utility.yul\":179:188   */\n      dup2\n        /* \"#utility.yul\":166:189   */\n      calldataload\n        /* \"#utility.yul\":229:233   */\n      0xff\n        /* \"#utility.yul\":222:227   */\n      dup2\n        /* \"#utility.yul\":218:234   */\n      and\n        /* \"#utility.yul\":211:216   */\n      dup2\n        /* \"#utility.yul\":208:235   */\n      eq\n        /* \"#utility.yul\":198:253   */\n      tag_26\n      jumpi\n        /* \"#utility.yul\":249:250   */\n      0x00\n        /* \"#utility.yul\":246:247   */\n      dup1\n        /* \"#utility.yul\":239:251   */\n      revert\n        /* \"#utility.yul\":198:253   */\n    tag_26:\n        /* \"#utility.yul\":272:277   */\n      swap4\n        /* \"#utility.yul\":14:283   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":480:702   */\n    tag_16:\n        /* \"#utility.yul\":520:524   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup3\n        /* \"#utility.yul\":545:546   */\n      dup3\n        /* \"#utility.yul\":542:550   */\n      lt\n        /* \"#utility.yul\":539:670   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":592:602   */\n      0x4e487b71\n        /* \"#utility.yul\":587:590   */\n      0xe0\n        /* \"#utility.yul\":583:603   */\n      shl\n        /* \"#utility.yul\":580:581   */\n      0x00\n        /* \"#utility.yul\":573:604   */\n      mstore\n        /* \"#utility.yul\":627:631   */\n      0x11\n        /* \"#utility.yul\":624:625   */\n      0x04\n        /* \"#utility.yul\":617:632   */\n      mstore\n        /* \"#utility.yul\":655:659   */\n      0x24\n        /* \"#utility.yul\":652:653   */\n      0x00\n        /* \"#utility.yul\":645:660   */\n      revert\n        /* \"#utility.yul\":539:670   */\n    tag_29:\n      pop\n        /* \"#utility.yul\":687:696   */\n      sub\n      swap1\n        /* \"#utility.yul\":480:702   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c7e0bdcf2e2703ad7990d4b2def750c956cc7b26b33031d321f6c2734a72a45d64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234670de0b6b3a76400001461001857600080fd5b61017b806100276000396000f3fe6080604052600436106100295760003560e01c80634ba4c16b1461002e578063b2fa1c9e14610043575b600080fd5b61004161003c3660046100f6565b610064565b005b34801561004f57600080fd5b50604080514715815290519081900360200190f35b34670de0b6b3a76400001461007857600080fd5b6000610085600143610120565b604080519140602083015242908201526060016040516020818303038152906040528051906020012060001c90508060ff168260ff16036100f2576040513390600090671bc16d674ec800009082818181858883f193505050501580156100f0573d6000803e3d6000fd5b505b5050565b60006020828403121561010857600080fd5b813560ff8116811461011957600080fd5b9392505050565b60008282101561014057634e487b7160e01b600052601160045260246000fd5b50039056fea2646970667358221220c7e0bdcf2e2703ad7990d4b2def750c956cc7b26b33031d321f6c2734a72a45d64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH8 0xDE0B6B3A7640000 EQ PUSH2 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B DUP1 PUSH2 0x27 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BA4C16B EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x43 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41 PUSH2 0x3C CALLDATASIZE PUSH1 0x4 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SELFBALANCE ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH8 0xDE0B6B3A7640000 EQ PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x85 PUSH1 0x1 NUMBER PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 BLOCKHASH PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND SUB PUSH2 0xF2 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH8 0x1BC16D674EC80000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x140 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xE0 0xBD 0xCF 0x2E 0x27 SUB 0xAD PUSH26 0x90D4B2DEF750C956CC7B26B33031D321F6C2734A72A45D64736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "61:556:0:-:0;;;143:9;156:7;143:20;135:29;;;;;;61:556;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@guess_75": {
									"entryPoint": 100,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isComplete_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:956:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "82:201:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "128:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "137:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "140:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "130:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "130:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "130:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "103:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "112:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "99:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "99:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "124:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "95:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:32:1"
															},
															"nodeType": "YulIf",
															"src": "92:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "153:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "179:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "166:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "157:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "239:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "239:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "211:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "222:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "229:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "218:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "218:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "208:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "208:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "201:35:1"
															},
															"nodeType": "YulIf",
															"src": "198:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "262:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "272:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "262:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "48:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "59:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "71:6:1",
														"type": ""
													}
												],
												"src": "14:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "383:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "393:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "416:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "393:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "435:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "460:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "453:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "453:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "446:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "446:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "428:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "352:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "363:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "374:4:1",
														"type": ""
													}
												],
												"src": "288:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "529:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "559:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "580:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "587:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "592:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "583:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "583:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "573:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "573:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "573:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "624:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "627:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "617:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "617:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "617:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "652:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "655:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "645:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "645:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "645:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "545:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "548:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "542:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:8:1"
															},
															"nodeType": "YulIf",
															"src": "539:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "679:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "691:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "694:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "679:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "511:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "514:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "520:4:1",
														"type": ""
													}
												],
												"src": "480:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "854:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "871:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "876:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "864:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "903:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "908:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "913:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "892:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "929:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "940:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "929:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "822:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "835:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "846:3:1",
														"type": ""
													}
												],
												"src": "707:247:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80634ba4c16b1461002e578063b2fa1c9e14610043575b600080fd5b61004161003c3660046100f6565b610064565b005b34801561004f57600080fd5b50604080514715815290519081900360200190f35b34670de0b6b3a76400001461007857600080fd5b6000610085600143610120565b604080519140602083015242908201526060016040516020818303038152906040528051906020012060001c90508060ff168260ff16036100f2576040513390600090671bc16d674ec800009082818181858883f193505050501580156100f0573d6000803e3d6000fd5b505b5050565b60006020828403121561010857600080fd5b813560ff8116811461011957600080fd5b9392505050565b60008282101561014057634e487b7160e01b600052601160045260246000fd5b50039056fea2646970667358221220c7e0bdcf2e2703ad7990d4b2def750c956cc7b26b33031d321f6c2734a72a45d64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BA4C16B EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x43 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41 PUSH2 0x3C CALLDATASIZE PUSH1 0x4 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SELFBALANCE ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH8 0xDE0B6B3A7640000 EQ PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x85 PUSH1 0x1 NUMBER PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 BLOCKHASH PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND SUB PUSH2 0xF2 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH8 0x1BC16D674EC80000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x140 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xE0 0xBD 0xCF 0x2E 0x27 SUB 0xAD PUSH26 0x90D4B2DEF750C956CC7B26B33031D321F6C2734A72A45D64736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "61:556:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;289:325;;;;;;:::i;:::-;;:::i;:::-;;180:101;;;;;;;;;;-1:-1:-1;180:101:0;;;247:21;:26;428:41:1;;180:101:0;;;;;;416:2:1;180:101:0;;;289:325;347:9;360:7;347:20;339:29;;;;;;389:12;465:16;480:1;465:12;:16;:::i;:::-;438:62;;;455:27;;438:62;;;864:19:1;484:15:0;899:12:1;;;892:28;936:12;;438:62:0;;;;;;;;;;;;428:73;;;;;;410:102;;389:124;;535:6;530:11;;:1;:11;;;526:81;;558:37;;566:10;;558:37;;587:7;;558:37;;;;587:7;566:10;558:37;;;;;;;;;;;;;;;;;;;;;526:81;328:286;289:325;:::o;14:269:1:-;71:6;124:2;112:9;103:7;99:23;95:32;92:52;;;140:1;137;130:12;92:52;179:9;166:23;229:4;222:5;218:16;211:5;208:27;198:55;;249:1;246;239:12;198:55;272:5;14:269;-1:-1:-1;;;14:269:1:o;480:222::-;520:4;548:1;545;542:8;539:131;;;592:10;587:3;583:20;580:1;573:31;627:4;624:1;617:15;655:4;652:1;645:15;539:131;-1:-1:-1;687:9:1;;480:222::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "75800",
								"executionCost": "121",
								"totalCost": "75921"
							},
							"external": {
								"guess(uint8)": "infinite",
								"isComplete()": "176"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 143,
									"end": 152,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 143,
									"end": 163,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 135,
									"end": 164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 135,
									"end": 164,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 135,
									"end": 164,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 135,
									"end": 164,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 135,
									"end": 164,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 135,
									"end": 164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7e0bdcf2e2703ad7990d4b2def750c956cc7b26b33031d321f6c2734a72a45d64736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "4BA4C16B"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA1C9E"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 614,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 180,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 247,
											"end": 268,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 247,
											"end": 273,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 428,
											"end": 469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 428,
											"end": 469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 180,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 281,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 347,
											"end": 356,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 360,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 347,
											"end": 367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 339,
											"end": 368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 368,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 339,
											"end": 368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 389,
											"end": 401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 480,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 477,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 465,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 465,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 465,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 482,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 484,
											"end": 499,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 899,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 899,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 892,
											"end": 920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 936,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 438,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 428,
											"end": 501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 410,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 512,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 389,
											"end": 513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 389,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 530,
											"end": 531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 526,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 526,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 576,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 566,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 587,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 566,
											"end": 576,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 558,
											"end": 595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 558,
											"end": 595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 526,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 526,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 71,
											"end": 77,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 112,
											"end": 121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 103,
											"end": 110,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 99,
											"end": 122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 95,
											"end": 127,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 92,
											"end": 144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 92,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 92,
											"end": 144,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 140,
											"end": 141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 130,
											"end": 142,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 92,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 92,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 166,
											"end": 189,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 229,
											"end": 233,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 222,
											"end": 227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 211,
											"end": 216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 208,
											"end": 235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 198,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 198,
											"end": 253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 249,
											"end": 250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 198,
											"end": 253,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 198,
											"end": 253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 272,
											"end": 277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 480,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 520,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 542,
											"end": 550,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 539,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 592,
											"end": 602,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 587,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 580,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 627,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 655,
											"end": 659,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 652,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 660,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 539,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 687,
											"end": 696,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 687,
											"end": 696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 480,
											"end": 702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"lotteries/GuessTheNewNumberChallenge.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"guess(uint8)": "4ba4c16b",
							"isComplete()": "b2fa1c9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"n\",\"type\":\"uint8\"}],\"name\":\"guess\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lotteries/GuessTheNewNumberChallenge.sol\":\"GuessTheNewNumberChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lotteries/GuessTheNewNumberChallenge.sol\":{\"keccak256\":\"0x34354af2703e917ba9ad2ce965be90e53c9e80337ff10270c7c2dae7584a5b6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c561ecb8582071cd80d9a78fb39e2b443b7b988e80d198fe3801524c2674a6\",\"dweb:/ipfs/QmVF8iWbkW8GjrX1WpETeGsYXhfDTXpDDTrn2qyALrKkAL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lotteries/GuessTheNewNumberChallenge.sol": {
				"ast": {
					"absolutePath": "lotteries/GuessTheNewNumberChallenge.sol",
					"exportedSymbols": {
						"GuessTheNewNumberChallenge": [
							76
						]
					},
					"id": 77,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GuessTheNewNumberChallenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "GuessTheNewNumberChallenge",
							"nameLocation": "70:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "143:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 6,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "143:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "156:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "143:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "135:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "135:29:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "125:0:0"
									},
									"scope": 76,
									"src": "104:68:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "229:52:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 19,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "255:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$76",
																		"typeString": "contract GuessTheNewNumberChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$76",
																		"typeString": "contract GuessTheNewNumberChallenge"
																	}
																],
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "247:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 17,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "247:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "247:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "247:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "272:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "247:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 16,
												"id": 24,
												"nodeType": "Return",
												"src": "240:33:0"
											}
										]
									},
									"functionSelector": "b2fa1c9e",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isComplete",
									"nameLocation": "189:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "199:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "223:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "222:6:0"
									},
									"scope": 76,
									"src": "180:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "328:286:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "347:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "347:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "360:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "347:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "339:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "339:29:0"
											},
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "395:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 74,
														"src": "389:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 38,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "389:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 51,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 48,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "465:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 49,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "number",
																								"nodeType": "MemberAccess",
																								"src": "465:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 50,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "480:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "465:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 47,
																						"name": "blockhash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967291,
																						"src": "455:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																							"typeString": "function (uint256) view returns (bytes32)"
																						}
																					},
																					"id": 52,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "455:27:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"expression": {
																						"id": 53,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "484:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 54,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "484:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 45,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "438:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 46,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "438:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 55,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "438:62:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 44,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "428:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "428:73:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "410:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 42,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "410:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "410:102:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "404:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 40,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "404:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "404:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:124:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 60,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 61,
														"name": "answer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "535:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "530:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "IfStatement",
												"src": "526:81:0",
												"trueBody": {
													"id": 72,
													"nodeType": "Block",
													"src": "543:64:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "32",
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "587:7:0",
																		"subdenomination": "ether",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2000000000000000000_by_1",
																			"typeString": "int_const 2000000000000000000"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_2000000000000000000_by_1",
																			"typeString": "int_const 2000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 65,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "566:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "566:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 64,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "558:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 63,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "558:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "558:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "558:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "558:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "558:37:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4ba4c16b",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "guess",
									"nameLocation": "298:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "310:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "304:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 27,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "304:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:9:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:0:0"
									},
									"scope": 76,
									"src": "289:325:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 77,
							"src": "61:556:0",
							"usedErrors": []
						}
					],
					"src": "33:584:0"
				},
				"id": 0
			}
		}
	}
}