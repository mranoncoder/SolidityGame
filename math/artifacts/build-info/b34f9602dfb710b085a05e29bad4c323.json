{
	"id": "b34f9602dfb710b085a05e29bad4c323",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"math/RetirementFundChallenge.sol": {
				"content": "pragma solidity ^0.4.21;\r\n\r\ncontract RetirementFundChallenge {\r\n    uint256 startBalance;\r\n    address owner = msg.sender;\r\n    address beneficiary;\r\n    uint256 expiration = now + 10 years;\r\n\r\n    function RetirementFundChallenge(address player) public payable {\r\n        require(msg.value == 1 ether);\r\n\r\n        beneficiary = player;\r\n        startBalance = msg.value;\r\n    }\r\n\r\n    function isComplete() public view returns (bool) {\r\n        return address(this).balance == 0;\r\n    }\r\n\r\n    function withdraw() public {\r\n        require(msg.sender == owner);\r\n\r\n        if (now < expiration) {\r\n            // early withdrawal incurs a 10% penalty\r\n            msg.sender.transfer(address(this).balance * 9 / 10);\r\n        } else {\r\n            msg.sender.transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function collectPenalty() public {\r\n        require(msg.sender == beneficiary);\r\n\r\n        uint256 withdrawn = startBalance - address(this).balance;\r\n\r\n        // an early withdrawal occurred\r\n        require(withdrawn > 0);\r\n\r\n        // penalty is what's left\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"math/RetirementFundChallenge.sol": {
				"RetirementFundChallenge": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "collectPenalty",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "player",
									"type": "address"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"math/RetirementFundChallenge.sol\":28:1142  contract RetirementFundChallenge {\r... */\n  mstore(0x40, 0x80)\n    /* \"math/RetirementFundChallenge.sol\":111:121  msg.sender */\n  caller\n    /* \"math/RetirementFundChallenge.sol\":95:121  address owner = msg.sender */\n  0x1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"math/RetirementFundChallenge.sol\":181:189  10 years */\n  0x12cc0300\n    /* \"math/RetirementFundChallenge.sol\":175:178  now */\n  timestamp\n    /* \"math/RetirementFundChallenge.sol\":175:189  now + 10 years */\n  add\n    /* \"math/RetirementFundChallenge.sol\":154:189  uint256 expiration = now + 10 years */\n  0x3\n  sstore\n    /* \"math/RetirementFundChallenge.sol\":198:378  function RetirementFundChallenge(address player) public payable {\r... */\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"math/RetirementFundChallenge.sol\":294:301  1 ether */\n  0xde0b6b3a7640000\n    /* \"math/RetirementFundChallenge.sol\":281:290  msg.value */\n  callvalue\n    /* \"math/RetirementFundChallenge.sol\":281:301  msg.value == 1 ether */\n  eq\n    /* \"math/RetirementFundChallenge.sol\":273:302  require(msg.value == 1 ether) */\n  iszero\n  iszero\n  tag_3\n  jumpi\n  0x0\n  dup1\n  revert\ntag_3:\n    /* \"math/RetirementFundChallenge.sol\":329:335  player */\n  dup1\n    /* \"math/RetirementFundChallenge.sol\":315:326  beneficiary */\n  0x2\n  0x0\n    /* \"math/RetirementFundChallenge.sol\":315:335  beneficiary = player */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"math/RetirementFundChallenge.sol\":361:370  msg.value */\n  callvalue\n    /* \"math/RetirementFundChallenge.sol\":346:358  startBalance */\n  0x0\n    /* \"math/RetirementFundChallenge.sol\":346:370  startBalance = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"math/RetirementFundChallenge.sol\":198:378  function RetirementFundChallenge(address player) public payable {\r... */\n  pop\n    /* \"math/RetirementFundChallenge.sol\":28:1142  contract RetirementFundChallenge {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"math/RetirementFundChallenge.sol\":28:1142  contract RetirementFundChallenge {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x39f22f6b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"math/RetirementFundChallenge.sol\":818:1139  function collectPenalty() public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"math/RetirementFundChallenge.sol\":818:1139  function collectPenalty() public {\r... */\n      pop\n      tag_6\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"math/RetirementFundChallenge.sol\":495:810  function withdraw() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"math/RetirementFundChallenge.sol\":495:810  function withdraw() public {\r... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      stop\n        /* \"math/RetirementFundChallenge.sol\":386:487  function isComplete() public view returns (bool) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"math/RetirementFundChallenge.sol\":386:487  function isComplete() public view returns (bool) {\r... */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"math/RetirementFundChallenge.sol\":818:1139  function collectPenalty() public {\r... */\n    tag_7:\n        /* \"math/RetirementFundChallenge.sol\":909:926  uint256 withdrawn */\n      0x0\n        /* \"math/RetirementFundChallenge.sol\":884:895  beneficiary */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":870:895  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":870:880  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":870:895  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"math/RetirementFundChallenge.sol\":862:896  require(msg.sender == beneficiary) */\n      iszero\n      iszero\n      tag_15\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_15:\n        /* \"math/RetirementFundChallenge.sol\":952:956  this */\n      address\n        /* \"math/RetirementFundChallenge.sol\":944:965  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"math/RetirementFundChallenge.sol\":929:941  startBalance */\n      sload(0x0)\n        /* \"math/RetirementFundChallenge.sol\":929:965  startBalance - address(this).balance */\n      sub\n        /* \"math/RetirementFundChallenge.sol\":909:965  uint256 withdrawn = startBalance - address(this).balance */\n      swap1\n      pop\n        /* \"math/RetirementFundChallenge.sol\":1039:1040  0 */\n      0x0\n        /* \"math/RetirementFundChallenge.sol\":1027:1036  withdrawn */\n      dup2\n        /* \"math/RetirementFundChallenge.sol\":1027:1040  withdrawn > 0 */\n      gt\n        /* \"math/RetirementFundChallenge.sol\":1019:1041  require(withdrawn > 0) */\n      iszero\n      iszero\n      tag_16\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_16:\n        /* \"math/RetirementFundChallenge.sol\":1089:1099  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":1089:1108  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":1089:1131  msg.sender.transfer(address(this).balance) */\n      0x8fc\n        /* \"math/RetirementFundChallenge.sol\":1117:1121  this */\n      address\n        /* \"math/RetirementFundChallenge.sol\":1109:1130  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"math/RetirementFundChallenge.sol\":1089:1131  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"math/RetirementFundChallenge.sol\":1089:1131  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"math/RetirementFundChallenge.sol\":818:1139  function collectPenalty() public {\r... */\n      pop\n      jump\t// out\n        /* \"math/RetirementFundChallenge.sol\":495:810  function withdraw() public {\r... */\n    tag_10:\n        /* \"math/RetirementFundChallenge.sol\":555:560  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":541:560  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":541:551  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":541:560  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"math/RetirementFundChallenge.sol\":533:561  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_19\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_19:\n        /* \"math/RetirementFundChallenge.sol\":584:594  expiration */\n      sload(0x3)\n        /* \"math/RetirementFundChallenge.sol\":578:581  now */\n      timestamp\n        /* \"math/RetirementFundChallenge.sol\":578:594  now < expiration */\n      lt\n        /* \"math/RetirementFundChallenge.sol\":574:803  if (now < expiration) {\r... */\n      iszero\n      tag_20\n      jumpi\n        /* \"math/RetirementFundChallenge.sol\":665:675  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":665:684  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":665:716  msg.sender.transfer(address(this).balance * 9 / 10) */\n      0x8fc\n        /* \"math/RetirementFundChallenge.sol\":713:715  10 */\n      0xa\n        /* \"math/RetirementFundChallenge.sol\":709:710  9 */\n      0x9\n        /* \"math/RetirementFundChallenge.sol\":693:697  this */\n      address\n        /* \"math/RetirementFundChallenge.sol\":685:706  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"math/RetirementFundChallenge.sol\":685:710  address(this).balance * 9 */\n      mul\n        /* \"math/RetirementFundChallenge.sol\":685:715  address(this).balance * 9 / 10 */\n      dup2\n      iszero\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      div\n        /* \"math/RetirementFundChallenge.sol\":665:716  msg.sender.transfer(address(this).balance * 9 / 10) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"math/RetirementFundChallenge.sol\":665:716  msg.sender.transfer(address(this).balance * 9 / 10) */\n      pop\n        /* \"math/RetirementFundChallenge.sol\":574:803  if (now < expiration) {\r... */\n      jump(tag_23)\n    tag_20:\n        /* \"math/RetirementFundChallenge.sol\":749:759  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":749:768  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":749:791  msg.sender.transfer(address(this).balance) */\n      0x8fc\n        /* \"math/RetirementFundChallenge.sol\":777:781  this */\n      address\n        /* \"math/RetirementFundChallenge.sol\":769:790  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"math/RetirementFundChallenge.sol\":749:791  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"math/RetirementFundChallenge.sol\":749:791  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"math/RetirementFundChallenge.sol\":574:803  if (now < expiration) {\r... */\n    tag_23:\n        /* \"math/RetirementFundChallenge.sol\":495:810  function withdraw() public {\r... */\n      jump\t// out\n        /* \"math/RetirementFundChallenge.sol\":386:487  function isComplete() public view returns (bool) {\r... */\n    tag_13:\n        /* \"math/RetirementFundChallenge.sol\":429:433  bool */\n      0x0\n        /* \"math/RetirementFundChallenge.sol\":478:479  0 */\n      dup1\n        /* \"math/RetirementFundChallenge.sol\":461:465  this */\n      address\n        /* \"math/RetirementFundChallenge.sol\":453:474  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"math/RetirementFundChallenge.sol\":453:479  address(this).balance == 0 */\n      eq\n        /* \"math/RetirementFundChallenge.sol\":446:479  return address(this).balance == 0 */\n      swap1\n      pop\n        /* \"math/RetirementFundChallenge.sol\":386:487  function isComplete() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820eb80d0a61c7509362c74983bd6e7c3338bc8a641018a6f8c5f9b5a24ed1947ba0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506312cc0300420160035560405160208061040a83398101806040528101908080519060200190929190505050670de0b6b3a76400003414151561008757600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000819055505061032b806100df6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806339f22f6b1461005c5780633ccfd60b14610073578063b2fa1c9e1461008a575b600080fd5b34801561006857600080fd5b506100716100b9565b005b34801561007f57600080fd5b506100886101a5565b005b34801561009657600080fd5b5061009f6102de565b604051808215151515815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561011757600080fd5b3073ffffffffffffffffffffffffffffffffffffffff163160005403905060008111151561014457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156101a1573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020157600080fd5b60035442101561027d573373ffffffffffffffffffffffffffffffffffffffff166108fc600a60093073ffffffffffffffffffffffffffffffffffffffff16310281151561024b57fe5b049081150290604051600060405180830381858888f19350505050158015610277573d6000803e3d6000fd5b506102dc565b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156102da573d6000803e3d6000fd5b505b565b6000803073ffffffffffffffffffffffffffffffffffffffff1631149050905600a165627a7a72305820eb80d0a61c7509362c74983bd6e7c3338bc8a641018a6f8c5f9b5a24ed1947ba0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH4 0x12CC0300 TIMESTAMP ADD PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x40A DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ ISZERO ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0x32B DUP1 PUSH2 0xDF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x39F22F6B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x8A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0x1A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x0 SLOAD SUB SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x27D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA PUSH1 0x9 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE MUL DUP2 ISZERO ISZERO PUSH2 0x24B JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2DC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xeb DUP1 0xd0 0xa6 SHR PUSH22 0x9362C74983BD6E7C3338BC8A641018A6F8C5F9B5A24 0xed NOT 0x47 0xba STOP 0x29 ",
							"sourceMap": "28:1114:0:-;;;111:10;95:26;;;;;;;;;;;;;;;;;;;;181:8;175:3;:14;154:35;;198:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:7;281:9;:20;273:29;;;;;;;;329:6;315:11;;:20;;;;;;;;;;;;;;;;;;361:9;346:12;:24;;;;198:180;28:1114;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806339f22f6b1461005c5780633ccfd60b14610073578063b2fa1c9e1461008a575b600080fd5b34801561006857600080fd5b506100716100b9565b005b34801561007f57600080fd5b506100886101a5565b005b34801561009657600080fd5b5061009f6102de565b604051808215151515815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561011757600080fd5b3073ffffffffffffffffffffffffffffffffffffffff163160005403905060008111151561014457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156101a1573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020157600080fd5b60035442101561027d573373ffffffffffffffffffffffffffffffffffffffff166108fc600a60093073ffffffffffffffffffffffffffffffffffffffff16310281151561024b57fe5b049081150290604051600060405180830381858888f19350505050158015610277573d6000803e3d6000fd5b506102dc565b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156102da573d6000803e3d6000fd5b505b565b6000803073ffffffffffffffffffffffffffffffffffffffff1631149050905600a165627a7a72305820eb80d0a61c7509362c74983bd6e7c3338bc8a641018a6f8c5f9b5a24ed1947ba0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x39F22F6B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x8A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0x1A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x0 SLOAD SUB SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x27D JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA PUSH1 0x9 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE MUL DUP2 ISZERO ISZERO PUSH2 0x24B JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2DC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xeb DUP1 0xd0 0xa6 SHR PUSH22 0x9362C74983BD6E7C3338BC8A641018A6F8C5F9B5A24 0xed NOT 0x47 0xba STOP 0x29 ",
							"sourceMap": "28:1114:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:321;;8:9:-1;5:2;;;30:1;27;20:12;5:2;818:321:0;;;;;;495:315;;8:9:-1;5:2;;;30:1;27;20:12;5:2;495:315:0;;;;;;386:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;818:321;909:17;884:11;;;;;;;;;;;870:25;;:10;:25;;;862:34;;;;;;;;952:4;944:21;;;929:12;;:36;909:56;;1039:1;1027:9;:13;1019:22;;;;;;;;1089:10;:19;;:42;1117:4;1109:21;;;1089:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1089:42:0;818:321;:::o;495:315::-;555:5;;;;;;;;;;;541:19;;:10;:19;;;533:28;;;;;;;;584:10;;578:3;:16;574:229;;;665:10;:19;;:51;713:2;709:1;693:4;685:21;;;:25;:30;;;;;;;;665:51;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:51:0;574:229;;;749:10;:19;;:42;777:4;769:21;;;749:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;749:42:0;574:229;495:315::o;386:101::-;429:4;478:1;461:4;453:21;;;:26;446:33;;386:101;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "162200",
								"executionCost": "80855",
								"totalCost": "243055"
							},
							"external": {
								"collectPenalty()": "infinite",
								"isComplete()": "669",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 1142,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "MSTORE"
								},
								{
									"begin": 111,
									"end": 121,
									"name": "CALLER"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "EXP"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "DUP2"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "SLOAD"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "DUP2"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "MUL"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "NOT"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "AND"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "SWAP1"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "DUP4"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "AND"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "MUL"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "OR"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "SWAP1"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "SSTORE"
								},
								{
									"begin": 95,
									"end": 121,
									"name": "POP"
								},
								{
									"begin": 181,
									"end": 189,
									"name": "PUSH",
									"value": "12CC0300"
								},
								{
									"begin": 175,
									"end": 178,
									"name": "TIMESTAMP"
								},
								{
									"begin": 175,
									"end": 189,
									"name": "ADD"
								},
								{
									"begin": 154,
									"end": 189,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 154,
									"end": 189,
									"name": "SSTORE"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "MLOAD"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "PUSHSIZE"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "DUP4"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "CODECOPY"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "DUP2"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "ADD"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "MSTORE"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "DUP2"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "ADD"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "SWAP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "MLOAD"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "SWAP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "ADD"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "SWAP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "SWAP3"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "SWAP2"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "SWAP1"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "POP"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "POP"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "POP"
								},
								{
									"begin": 294,
									"end": 301,
									"name": "PUSH",
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 281,
									"end": 290,
									"name": "CALLVALUE"
								},
								{
									"begin": 281,
									"end": 301,
									"name": "EQ"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "ISZERO"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "ISZERO"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "JUMPI"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "DUP1"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "REVERT"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 273,
									"end": 302,
									"name": "JUMPDEST"
								},
								{
									"begin": 329,
									"end": 335,
									"name": "DUP1"
								},
								{
									"begin": 315,
									"end": 326,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 315,
									"end": 326,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "EXP"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "DUP2"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "SLOAD"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "DUP2"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "MUL"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "NOT"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "AND"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "SWAP1"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "DUP4"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "AND"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "MUL"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "OR"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "SWAP1"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "SSTORE"
								},
								{
									"begin": 315,
									"end": 335,
									"name": "POP"
								},
								{
									"begin": 361,
									"end": 370,
									"name": "CALLVALUE"
								},
								{
									"begin": 346,
									"end": 358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 346,
									"end": 370,
									"name": "DUP2"
								},
								{
									"begin": 346,
									"end": 370,
									"name": "SWAP1"
								},
								{
									"begin": 346,
									"end": 370,
									"name": "SSTORE"
								},
								{
									"begin": 346,
									"end": 370,
									"name": "POP"
								},
								{
									"begin": 198,
									"end": 378,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 1142,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820eb80d0a61c7509362c74983bd6e7c3338bc8a641018a6f8c5f9b5a24ed1947ba0029",
									".code": [
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "39F22F6B"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "B2FA1C9E"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1142,
											"name": "REVERT"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "JUMPDEST"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "JUMP"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "JUMPDEST"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "STOP"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "JUMPDEST"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "POP"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "JUMP"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "JUMPDEST"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "STOP"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "JUMP"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "MLOAD"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "DUP3"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "ISZERO"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "ISZERO"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "ISZERO"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "ISZERO"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "ADD"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "SWAP2"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "MLOAD"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "SWAP2"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "SUB"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "RETURN"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "JUMPDEST"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "SLOAD"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "EXP"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "DIV"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 895,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 880,
											"name": "CALLER"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "EQ"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "ISZERO"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "ISZERO"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "JUMPI"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "REVERT"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 862,
											"end": 896,
											"name": "JUMPDEST"
										},
										{
											"begin": 952,
											"end": 956,
											"name": "ADDRESS"
										},
										{
											"begin": 944,
											"end": 965,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 944,
											"end": 965,
											"name": "AND"
										},
										{
											"begin": 944,
											"end": 965,
											"name": "BALANCE"
										},
										{
											"begin": 929,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 929,
											"end": 941,
											"name": "SLOAD"
										},
										{
											"begin": 929,
											"end": 965,
											"name": "SUB"
										},
										{
											"begin": 909,
											"end": 965,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 965,
											"name": "POP"
										},
										{
											"begin": 1039,
											"end": 1040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 1027,
											"end": 1040,
											"name": "GT"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "ISZERO"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "ISZERO"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "REVERT"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "CALLER"
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1108,
											"name": "AND"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "ADDRESS"
										},
										{
											"begin": 1109,
											"end": 1130,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1130,
											"name": "AND"
										},
										{
											"begin": 1109,
											"end": 1130,
											"name": "BALANCE"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP2"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "ISZERO"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "MUL"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP1"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "MLOAD"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "MLOAD"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP4"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SUB"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP2"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP6"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP9"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "DUP9"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "CALL"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "SWAP4"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1089,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "POP"
										},
										{
											"begin": 818,
											"end": 1139,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "JUMPDEST"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "SLOAD"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "EXP"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "DIV"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "AND"
										},
										{
											"begin": 541,
											"end": 560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 560,
											"name": "AND"
										},
										{
											"begin": 541,
											"end": 551,
											"name": "CALLER"
										},
										{
											"begin": 541,
											"end": 560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 560,
											"name": "AND"
										},
										{
											"begin": 541,
											"end": 560,
											"name": "EQ"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "ISZERO"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "ISZERO"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "JUMPI"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "DUP1"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "REVERT"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 533,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 584,
											"end": 594,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 584,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 578,
											"end": 581,
											"name": "TIMESTAMP"
										},
										{
											"begin": 578,
											"end": 594,
											"name": "LT"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "ISZERO"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "JUMPI"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER"
										},
										{
											"begin": 665,
											"end": 684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 684,
											"name": "AND"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 713,
											"end": 715,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 693,
											"end": 697,
											"name": "ADDRESS"
										},
										{
											"begin": 685,
											"end": 706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 706,
											"name": "AND"
										},
										{
											"begin": 685,
											"end": 706,
											"name": "BALANCE"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "MUL"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "DUP2"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "ISZERO"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "ISZERO"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "JUMPI"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "INVALID"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 715,
											"name": "DIV"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "ISZERO"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MUL"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MLOAD"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MLOAD"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP4"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "SUB"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP6"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP9"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP9"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "CALL"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "SWAP4"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "JUMP"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 749,
											"end": 759,
											"name": "CALLER"
										},
										{
											"begin": 749,
											"end": 768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 768,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 777,
											"end": 781,
											"name": "ADDRESS"
										},
										{
											"begin": 769,
											"end": 790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 769,
											"end": 790,
											"name": "AND"
										},
										{
											"begin": 769,
											"end": 790,
											"name": "BALANCE"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "SWAP1"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "DUP2"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "ISZERO"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "MUL"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "SWAP1"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "MLOAD"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "MLOAD"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "DUP1"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "DUP4"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "SUB"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "DUP2"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "DUP6"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "DUP9"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "DUP9"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "CALL"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "SWAP4"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "POP"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "POP"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "POP"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "POP"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 574,
											"end": 803,
											"name": "JUMPDEST"
										},
										{
											"begin": 495,
											"end": 810,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1"
										},
										{
											"begin": 461,
											"end": 465,
											"name": "ADDRESS"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "AND"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "BALANCE"
										},
										{
											"begin": 453,
											"end": 479,
											"name": "EQ"
										},
										{
											"begin": 446,
											"end": 479,
											"name": "SWAP1"
										},
										{
											"begin": 446,
											"end": 479,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 487,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"collectPenalty()": "39f22f6b",
							"isComplete()": "b2fa1c9e",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"collectPenalty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"math/RetirementFundChallenge.sol\":\"RetirementFundChallenge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"math/RetirementFundChallenge.sol\":{\"keccak256\":\"0x117281ca634b9415002ee48d70535f489d9c8e1d401654cc154924a1b9a78dac\",\"urls\":[\"bzzr://78eeb1a886ed3619b5044d82b87c0e4358e59a1a9ee69cee5c049477df72a634\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "math/RetirementFundChallenge.sol:9:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function RetirementFundChallenge(address player) public payable {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 378,
					"file": "math/RetirementFundChallenge.sol",
					"start": 198
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "math/RetirementFundChallenge.sol:7:32: Warning: Using \"years\" as a unit denomination is deprecated.\n    uint256 expiration = now + 10 years;\r\n                               ^------^\n",
				"message": "Using \"years\" as a unit denomination is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 189,
					"file": "math/RetirementFundChallenge.sol",
					"start": 181
				},
				"type": "Warning"
			}
		],
		"sources": {
			"math/RetirementFundChallenge.sol": {
				"ast": {
					"absolutePath": "math/RetirementFundChallenge.sol",
					"exportedSymbols": {
						"RetirementFundChallenge": [
							130
						]
					},
					"id": 131,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 130,
							"linearizedBaseContracts": [
								130
							],
							"name": "RetirementFundChallenge",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "startBalance",
									"nodeType": "VariableDeclaration",
									"scope": 130,
									"src": "68:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "68:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 130,
									"src": "95:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 5,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 145,
											"src": "111:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "111:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"name": "beneficiary",
									"nodeType": "VariableDeclaration",
									"scope": 130,
									"src": "128:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "128:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"name": "expiration",
									"nodeType": "VariableDeclaration",
									"scope": 130,
									"src": "154:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 11,
											"name": "now",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 147,
											"src": "175:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 12,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "181:8:0",
											"subdenomination": "years",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_315360000_by_1",
												"typeString": "int_const 315360000"
											},
											"value": "10"
										},
										"src": "175:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "262:116:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "281:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "281:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "294:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "281:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															148,
															149
														],
														"referencedDeclaration": 148,
														"src": "273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "273:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "273:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 26,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "315:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 27,
														"name": "player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "329:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "315:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "315:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 30,
														"name": "startBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "346:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 31,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "361:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "361:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "346:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "346:24:0"
											}
										]
									},
									"documentation": null,
									"id": 36,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "RetirementFundChallenge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"name": "player",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "230:16:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:0:0"
									},
									"scope": 130,
									"src": "198:180:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "435:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 42,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "461:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																		"typeString": "contract RetirementFundChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																		"typeString": "contract RetirementFundChallenge"
																	}
																],
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "453:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "453:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "453:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "478:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "453:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 40,
												"id": 47,
												"nodeType": "Return",
												"src": "446:33:0"
											}
										]
									},
									"documentation": null,
									"id": 49,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isComplete",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "429:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 38,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:6:0"
									},
									"scope": 130,
									"src": "386:101:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "522:288:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 53,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "541:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "541:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "555:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "541:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															148,
															149
														],
														"referencedDeclaration": 148,
														"src": "533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "533:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "533:28:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 59,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "578:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "584:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "578:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "734:69:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 84,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 158,
																					"src": "777:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																						"typeString": "contract RetirementFundChallenge"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																						"typeString": "contract RetirementFundChallenge"
																					}
																				],
																				"id": 83,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "769:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 85,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "769:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "769:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 78,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "749:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "749:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "749:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "749:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 88,
															"nodeType": "ExpressionStatement",
															"src": "749:42:0"
														}
													]
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "574:229:0",
												"trueBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "596:132:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 74,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 72,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 68,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 158,
																							"src": "693:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																								"typeString": "contract RetirementFundChallenge"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																								"typeString": "contract RetirementFundChallenge"
																							}
																						],
																						"id": 67,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "685:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "685:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "685:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "39",
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "709:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_9_by_1",
																					"typeString": "int_const 9"
																				},
																				"value": "9"
																			},
																			"src": "685:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3130",
																			"id": 73,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "713:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "685:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 62,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "665:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "665:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 66,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "665:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "665:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "665:51:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"scope": 130,
									"src": "495:315:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "851:288:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 96,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "870:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "870:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "884:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "870:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															148,
															149
														],
														"referencedDeclaration": 148,
														"src": "862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "862:34:0"
											},
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"name": "withdrawn",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "909:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 104,
														"name": "startBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "929:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 106,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "952:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																		"typeString": "contract RetirementFundChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																		"typeString": "contract RetirementFundChallenge"
																	}
																],
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "944:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "944:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "944:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "929:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "909:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 112,
																"name": "withdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "1027:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1039:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1027:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															148,
															149
														],
														"referencedDeclaration": 148,
														"src": "1019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1019:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 123,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "1117:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																			"typeString": "contract RetirementFundChallenge"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_RetirementFundChallenge_$130",
																			"typeString": "contract RetirementFundChallenge"
																		}
																	],
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1109:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1109:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1109:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1089:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1089:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1089:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1089:42:0"
											}
										]
									},
									"documentation": null,
									"id": 129,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "collectPenalty",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:0:0"
									},
									"scope": 130,
									"src": "818:321:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 131,
							"src": "28:1114:0"
						}
					],
					"src": "0:1142:0"
				},
				"id": 0
			}
		}
	}
}