{
	"id": "b8f907116f65fdae0c4509bb35d1b530",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"math/RetirementFundChallenge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\ncontract RetirementFundChallenge {\r\n    uint256 startBalance;\r\n    address owner = msg.sender;\r\n    address beneficiary;\r\n    uint256 expiration = block.timestamp + 3650 days;\r\n\r\n    constructor(address player) payable{\r\n        require(msg.value == 1 ether);\r\n\r\n        beneficiary = player;\r\n        startBalance = msg.value;\r\n    }\r\n\r\n    function isComplete() public view returns (bool) {\r\n        return address(this).balance == 0;\r\n    }\r\n\r\n    function withdraw() public {\r\n        require(msg.sender == owner);\r\n\r\n        if (block.timestamp < expiration) {\r\n            // early withdrawal incurs a 10% penalty\r\n            payable(msg.sender).transfer(address(this).balance * 9 / 10);\r\n        } else {\r\n            payable(msg.sender).transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function collectPenalty() public {\r\n        require(msg.sender == beneficiary);\r\n\r\n        uint256 withdrawn = startBalance - address(this).balance;\r\n\r\n        // an early withdrawal occurred\r\n        require(withdrawn > 0);\r\n\r\n        // penalty is what's left\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"math/RetirementFundChallenge.sol": {
				"RetirementFundChallenge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "collectPenalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"math/RetirementFundChallenge.sol\":61:1198  contract RetirementFundChallenge {... */\n  mstore(0x40, 0x80)\n    /* \"math/RetirementFundChallenge.sol\":144:154  msg.sender */\n  caller\n    /* \"math/RetirementFundChallenge.sol\":128:154  address owner = msg.sender */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"math/RetirementFundChallenge.sol\":226:235  3650 days */\n  0x12cc0300\n    /* \"math/RetirementFundChallenge.sol\":208:223  block.timestamp */\n  timestamp\n    /* \"math/RetirementFundChallenge.sol\":208:235  block.timestamp + 3650 days */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"math/RetirementFundChallenge.sol\":187:235  uint256 expiration = block.timestamp + 3650 days */\n  0x03\n  sstore\n    /* \"math/RetirementFundChallenge.sol\":244:395  constructor(address player) payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"math/RetirementFundChallenge.sol\":311:318  1 ether */\n  0x0de0b6b3a7640000\n    /* \"math/RetirementFundChallenge.sol\":298:307  msg.value */\n  callvalue\n    /* \"math/RetirementFundChallenge.sol\":298:318  msg.value == 1 ether */\n  eq\n    /* \"math/RetirementFundChallenge.sol\":290:319  require(msg.value == 1 ether) */\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n    /* \"math/RetirementFundChallenge.sol\":346:352  player */\n  dup1\n    /* \"math/RetirementFundChallenge.sol\":332:343  beneficiary */\n  0x02\n  0x00\n    /* \"math/RetirementFundChallenge.sol\":332:352  beneficiary = player */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"math/RetirementFundChallenge.sol\":378:387  msg.value */\n  callvalue\n    /* \"math/RetirementFundChallenge.sol\":363:375  startBalance */\n  0x00\n    /* \"math/RetirementFundChallenge.sol\":363:387  startBalance = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"math/RetirementFundChallenge.sol\":244:395  constructor(address player) payable{... */\n  pop\n    /* \"math/RetirementFundChallenge.sol\":61:1198  contract RetirementFundChallenge {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:84   */\ntag_9:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_10:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x11\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:581   */\ntag_2:\n    /* \"#utility.yul\":316:319   */\n  0x00\n    /* \"#utility.yul\":335:355   */\n  tag_22\n    /* \"#utility.yul\":353:354   */\n  dup3\n    /* \"#utility.yul\":335:355   */\n  tag_9\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":330:355   */\n  swap2\n  pop\n    /* \"#utility.yul\":369:389   */\n  tag_23\n    /* \"#utility.yul\":387:388   */\n  dup4\n    /* \"#utility.yul\":369:389   */\n  tag_9\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":364:389   */\n  swap3\n  pop\n    /* \"#utility.yul\":523:524   */\n  dup3\n    /* \"#utility.yul\":455:521   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":451:525   */\n  sub\n    /* \"#utility.yul\":448:449   */\n  dup3\n    /* \"#utility.yul\":445:526   */\n  gt\n    /* \"#utility.yul\":442:549   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":529:547   */\n  tag_25\n  tag_10\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":442:549   */\ntag_24:\n    /* \"#utility.yul\":573:574   */\n  dup3\n    /* \"#utility.yul\":570:571   */\n  dup3\n    /* \"#utility.yul\":566:575   */\n  add\n    /* \"#utility.yul\":559:575   */\n  swap1\n  pop\n    /* \"#utility.yul\":276:581   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":668:785   */\ntag_12:\n    /* \"#utility.yul\":777:778   */\n  0x00\n    /* \"#utility.yul\":774:775   */\n  dup1\n    /* \"#utility.yul\":767:779   */\n  revert\n    /* \"#utility.yul\":914:1040   */\ntag_14:\n    /* \"#utility.yul\":951:958   */\n  0x00\n    /* \"#utility.yul\":991:1033   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":984:989   */\n  dup3\n    /* \"#utility.yul\":980:1034   */\n  and\n    /* \"#utility.yul\":969:1034   */\n  swap1\n  pop\n    /* \"#utility.yul\":914:1040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1046:1142   */\ntag_15:\n    /* \"#utility.yul\":1083:1090   */\n  0x00\n    /* \"#utility.yul\":1112:1136   */\n  tag_31\n    /* \"#utility.yul\":1130:1135   */\n  dup3\n    /* \"#utility.yul\":1112:1136   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1101:1136   */\n  swap1\n  pop\n    /* \"#utility.yul\":1046:1142   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1148:1270   */\ntag_16:\n    /* \"#utility.yul\":1221:1245   */\n  tag_33\n    /* \"#utility.yul\":1239:1244   */\n  dup2\n    /* \"#utility.yul\":1221:1245   */\n  tag_15\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1214:1219   */\n  dup2\n    /* \"#utility.yul\":1211:1246   */\n  eq\n    /* \"#utility.yul\":1201:1264   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1260:1261   */\n  0x00\n    /* \"#utility.yul\":1257:1258   */\n  dup1\n    /* \"#utility.yul\":1250:1262   */\n  revert\n    /* \"#utility.yul\":1201:1264   */\ntag_34:\n    /* \"#utility.yul\":1148:1270   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1276:1419   */\ntag_17:\n    /* \"#utility.yul\":1333:1338   */\n  0x00\n    /* \"#utility.yul\":1364:1370   */\n  dup2\n    /* \"#utility.yul\":1358:1371   */\n  mload\n    /* \"#utility.yul\":1349:1371   */\n  swap1\n  pop\n    /* \"#utility.yul\":1380:1413   */\n  tag_36\n    /* \"#utility.yul\":1407:1412   */\n  dup2\n    /* \"#utility.yul\":1380:1413   */\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1276:1419   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1425:1776   */\ntag_4:\n    /* \"#utility.yul\":1495:1501   */\n  0x00\n    /* \"#utility.yul\":1544:1546   */\n  0x20\n    /* \"#utility.yul\":1532:1541   */\n  dup3\n    /* \"#utility.yul\":1523:1530   */\n  dup5\n    /* \"#utility.yul\":1519:1542   */\n  sub\n    /* \"#utility.yul\":1515:1547   */\n  slt\n    /* \"#utility.yul\":1512:1631   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1550:1629   */\n  tag_39\n  tag_12\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1512:1631   */\ntag_38:\n    /* \"#utility.yul\":1670:1671   */\n  0x00\n    /* \"#utility.yul\":1695:1759   */\n  tag_40\n    /* \"#utility.yul\":1751:1758   */\n  dup5\n    /* \"#utility.yul\":1742:1748   */\n  dup3\n    /* \"#utility.yul\":1731:1740   */\n  dup6\n    /* \"#utility.yul\":1727:1749   */\n  add\n    /* \"#utility.yul\":1695:1759   */\n  tag_17\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1685:1759   */\n  swap2\n  pop\n    /* \"#utility.yul\":1641:1769   */\n  pop\n    /* \"#utility.yul\":1425:1776   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"math/RetirementFundChallenge.sol\":61:1198  contract RetirementFundChallenge {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"math/RetirementFundChallenge.sol\":61:1198  contract RetirementFundChallenge {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39f22f6b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"math/RetirementFundChallenge.sol\":865:1195  function collectPenalty() public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"math/RetirementFundChallenge.sol\":512:857  function withdraw() public {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"math/RetirementFundChallenge.sol\":403:504  function isComplete() public view returns (bool) {... */\n    tag_5:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"math/RetirementFundChallenge.sol\":865:1195  function collectPenalty() public {... */\n    tag_7:\n        /* \"math/RetirementFundChallenge.sol\":931:942  beneficiary */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":917:942  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":917:927  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":917:942  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"math/RetirementFundChallenge.sol\":909:943  require(msg.sender == beneficiary) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"math/RetirementFundChallenge.sol\":956:973  uint256 withdrawn */\n      0x00\n        /* \"math/RetirementFundChallenge.sol\":991:1012  address(this).balance */\n      selfbalance\n        /* \"math/RetirementFundChallenge.sol\":976:988  startBalance */\n      sload(0x00)\n        /* \"math/RetirementFundChallenge.sol\":976:1012  startBalance - address(this).balance */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"math/RetirementFundChallenge.sol\":956:1012  uint256 withdrawn = startBalance - address(this).balance */\n      swap1\n      pop\n        /* \"math/RetirementFundChallenge.sol\":1086:1087  0 */\n      0x00\n        /* \"math/RetirementFundChallenge.sol\":1074:1083  withdrawn */\n      dup2\n        /* \"math/RetirementFundChallenge.sol\":1074:1087  withdrawn > 0 */\n      gt\n        /* \"math/RetirementFundChallenge.sol\":1066:1088  require(withdrawn > 0) */\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n        /* \"math/RetirementFundChallenge.sol\":1144:1154  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":1136:1164  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":1136:1187  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"math/RetirementFundChallenge.sol\":1165:1186  address(this).balance */\n      selfbalance\n        /* \"math/RetirementFundChallenge.sol\":1136:1187  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n        /* \"math/RetirementFundChallenge.sol\":898:1195  {... */\n      pop\n        /* \"math/RetirementFundChallenge.sol\":865:1195  function collectPenalty() public {... */\n      jump\t// out\n        /* \"math/RetirementFundChallenge.sol\":512:857  function withdraw() public {... */\n    tag_9:\n        /* \"math/RetirementFundChallenge.sol\":572:577  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":558:577  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":558:568  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":558:577  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"math/RetirementFundChallenge.sol\":550:578  require(msg.sender == owner) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \"math/RetirementFundChallenge.sol\":613:623  expiration */\n      sload(0x03)\n        /* \"math/RetirementFundChallenge.sol\":595:610  block.timestamp */\n      timestamp\n        /* \"math/RetirementFundChallenge.sol\":595:623  block.timestamp < expiration */\n      lt\n        /* \"math/RetirementFundChallenge.sol\":591:850  if (block.timestamp < expiration) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"math/RetirementFundChallenge.sol\":702:712  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":694:722  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":694:754  payable(msg.sender).transfer(address(this).balance * 9 / 10) */\n      0x08fc\n        /* \"math/RetirementFundChallenge.sol\":751:753  10 */\n      0x0a\n        /* \"math/RetirementFundChallenge.sol\":747:748  9 */\n      0x09\n        /* \"math/RetirementFundChallenge.sol\":723:744  address(this).balance */\n      selfbalance\n        /* \"math/RetirementFundChallenge.sol\":723:748  address(this).balance * 9 */\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"math/RetirementFundChallenge.sol\":723:753  address(this).balance * 9 / 10 */\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"math/RetirementFundChallenge.sol\":694:754  payable(msg.sender).transfer(address(this).balance * 9 / 10) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n        /* \"math/RetirementFundChallenge.sol\":591:850  if (block.timestamp < expiration) {... */\n      jump(tag_30)\n    tag_23:\n        /* \"math/RetirementFundChallenge.sol\":795:805  msg.sender */\n      caller\n        /* \"math/RetirementFundChallenge.sol\":787:815  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"math/RetirementFundChallenge.sol\":787:838  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"math/RetirementFundChallenge.sol\":816:837  address(this).balance */\n      selfbalance\n        /* \"math/RetirementFundChallenge.sol\":787:838  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n        /* \"math/RetirementFundChallenge.sol\":591:850  if (block.timestamp < expiration) {... */\n    tag_30:\n        /* \"math/RetirementFundChallenge.sol\":512:857  function withdraw() public {... */\n      jump\t// out\n        /* \"math/RetirementFundChallenge.sol\":403:504  function isComplete() public view returns (bool) {... */\n    tag_11:\n        /* \"math/RetirementFundChallenge.sol\":446:450  bool */\n      0x00\n        /* \"math/RetirementFundChallenge.sol\":495:496  0 */\n      dup1\n        /* \"math/RetirementFundChallenge.sol\":470:491  address(this).balance */\n      selfbalance\n        /* \"math/RetirementFundChallenge.sol\":470:496  address(this).balance == 0 */\n      eq\n        /* \"math/RetirementFundChallenge.sol\":463:496  return address(this).balance == 0 */\n      swap1\n      pop\n        /* \"math/RetirementFundChallenge.sol\":403:504  function isComplete() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_34:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_35:\n        /* \"#utility.yul\":184:205   */\n      tag_42\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_34\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_13:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_44\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:511   */\n    tag_36:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":500:505   */\n      dup2\n        /* \"#utility.yul\":489:505   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":517:697   */\n    tag_37:\n        /* \"#utility.yul\":565:642   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":562:563   */\n      0x00\n        /* \"#utility.yul\":555:643   */\n      mstore\n        /* \"#utility.yul\":662:666   */\n      0x11\n        /* \"#utility.yul\":659:660   */\n      0x04\n        /* \"#utility.yul\":652:667   */\n      mstore\n        /* \"#utility.yul\":686:690   */\n      0x24\n        /* \"#utility.yul\":683:684   */\n      0x00\n        /* \"#utility.yul\":676:691   */\n      revert\n        /* \"#utility.yul\":703:894   */\n    tag_17:\n        /* \"#utility.yul\":743:747   */\n      0x00\n        /* \"#utility.yul\":763:783   */\n      tag_48\n        /* \"#utility.yul\":781:782   */\n      dup3\n        /* \"#utility.yul\":763:783   */\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":758:783   */\n      swap2\n      pop\n        /* \"#utility.yul\":797:817   */\n      tag_49\n        /* \"#utility.yul\":815:816   */\n      dup4\n        /* \"#utility.yul\":797:817   */\n      tag_36\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":792:817   */\n      swap3\n      pop\n        /* \"#utility.yul\":836:837   */\n      dup3\n        /* \"#utility.yul\":833:834   */\n      dup3\n        /* \"#utility.yul\":830:838   */\n      lt\n        /* \"#utility.yul\":827:861   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":841:859   */\n      tag_51\n      tag_37\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":827:861   */\n    tag_50:\n        /* \"#utility.yul\":886:887   */\n      dup3\n        /* \"#utility.yul\":883:884   */\n      dup3\n        /* \"#utility.yul\":879:888   */\n      sub\n        /* \"#utility.yul\":871:888   */\n      swap1\n      pop\n        /* \"#utility.yul\":703:894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":900:1248   */\n    tag_25:\n        /* \"#utility.yul\":940:947   */\n      0x00\n        /* \"#utility.yul\":963:983   */\n      tag_53\n        /* \"#utility.yul\":981:982   */\n      dup3\n        /* \"#utility.yul\":963:983   */\n      tag_36\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":958:983   */\n      swap2\n      pop\n        /* \"#utility.yul\":997:1017   */\n      tag_54\n        /* \"#utility.yul\":1015:1016   */\n      dup4\n        /* \"#utility.yul\":997:1017   */\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":992:1017   */\n      swap3\n      pop\n        /* \"#utility.yul\":1185:1186   */\n      dup2\n        /* \"#utility.yul\":1117:1183   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1113:1187   */\n      div\n        /* \"#utility.yul\":1110:1111   */\n      dup4\n        /* \"#utility.yul\":1107:1188   */\n      gt\n        /* \"#utility.yul\":1102:1103   */\n      dup3\n        /* \"#utility.yul\":1095:1104   */\n      iszero\n        /* \"#utility.yul\":1088:1105   */\n      iszero\n        /* \"#utility.yul\":1084:1189   */\n      and\n        /* \"#utility.yul\":1081:1212   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1192:1210   */\n      tag_56\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1081:1212   */\n    tag_55:\n        /* \"#utility.yul\":1240:1241   */\n      dup3\n        /* \"#utility.yul\":1237:1238   */\n      dup3\n        /* \"#utility.yul\":1233:1242   */\n      mul\n        /* \"#utility.yul\":1222:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":900:1248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1254:1434   */\n    tag_38:\n        /* \"#utility.yul\":1302:1379   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1299:1300   */\n      0x00\n        /* \"#utility.yul\":1292:1380   */\n      mstore\n        /* \"#utility.yul\":1399:1403   */\n      0x12\n        /* \"#utility.yul\":1396:1397   */\n      0x04\n        /* \"#utility.yul\":1389:1404   */\n      mstore\n        /* \"#utility.yul\":1423:1427   */\n      0x24\n        /* \"#utility.yul\":1420:1421   */\n      0x00\n        /* \"#utility.yul\":1413:1428   */\n      revert\n        /* \"#utility.yul\":1440:1625   */\n    tag_27:\n        /* \"#utility.yul\":1480:1481   */\n      0x00\n        /* \"#utility.yul\":1497:1517   */\n      tag_59\n        /* \"#utility.yul\":1515:1516   */\n      dup3\n        /* \"#utility.yul\":1497:1517   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1492:1517   */\n      swap2\n      pop\n        /* \"#utility.yul\":1531:1551   */\n      tag_60\n        /* \"#utility.yul\":1549:1550   */\n      dup4\n        /* \"#utility.yul\":1531:1551   */\n      tag_36\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1526:1551   */\n      swap3\n      pop\n        /* \"#utility.yul\":1570:1571   */\n      dup3\n        /* \"#utility.yul\":1560:1595   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1575:1593   */\n      tag_62\n      tag_38\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1560:1595   */\n    tag_61:\n        /* \"#utility.yul\":1617:1618   */\n      dup3\n        /* \"#utility.yul\":1614:1615   */\n      dup3\n        /* \"#utility.yul\":1610:1619   */\n      div\n        /* \"#utility.yul\":1605:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202ce2e1d2f5628624969d08b9a9e9733814b28642fcdae9c9253bc968e171f95964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1779:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "320:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "330:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "364:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "527:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "529:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "529:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "529:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "448:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "455:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "523:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "451:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "445:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:81:1"
															},
															"nodeType": "YulIf",
															"src": "442:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "559:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "570:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "573:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "566:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "316:3:1",
														"type": ""
													}
												],
												"src": "276:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "647:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "637:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "620:6:1",
														"type": ""
													}
												],
												"src": "587:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "774:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "777:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "767:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "668:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "880:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "897:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "791:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "959:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "969:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "984:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "969:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "941:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "951:7:1",
														"type": ""
													}
												],
												"src": "914:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1101:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1130:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1112:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1112:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1101:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1073:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1083:7:1",
														"type": ""
													}
												],
												"src": "1046:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1191:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1248:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1257:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1260:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1250:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1250:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1250:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1214:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1239:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1221:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1221:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1211:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:43:1"
															},
															"nodeType": "YulIf",
															"src": "1201:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:1",
														"type": ""
													}
												],
												"src": "1148:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1339:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1349:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1364:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1358:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1407:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1380:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1333:5:1",
														"type": ""
													}
												],
												"src": "1276:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1502:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1548:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1550:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1550:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1550:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1523:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1532:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1544:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:32:1"
															},
															"nodeType": "YulIf",
															"src": "1512:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1641:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1656:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1660:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1685:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1731:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1742:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1727:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1727:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1751:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1695:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1685:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1472:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1483:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1495:6:1",
														"type": ""
													}
												],
												"src": "1425:351:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506312cc0300426100559190610114565b6003556040516105f33803806105f3833981810160405281019061007991906101cd565b670de0b6b3a7640000341461008d57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600081905550506101fa565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061011f826100db565b915061012a836100db565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561015f5761015e6100e5565b5b828201905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019a8261016f565b9050919050565b6101aa8161018f565b81146101b557600080fd5b50565b6000815190506101c7816101a1565b92915050565b6000602082840312156101e3576101e261016a565b5b60006101f1848285016101b8565b91505092915050565b6103ea806102096000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806339f22f6b146100465780633ccfd60b14610050578063b2fa1c9e1461005a575b600080fd5b61004e610078565b005b61005861013b565b005b61006261024d565b60405161006f9190610272565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d257600080fd5b6000476000546100e291906102c6565b9050600081116100f157600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610137573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019557600080fd5b600354421015610203573373ffffffffffffffffffffffffffffffffffffffff166108fc600a6009476101c891906102fa565b6101d29190610383565b9081150290604051600060405180830381858888f193505050501580156101fd573d6000803e3d6000fd5b5061024b565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610249573d6000803e3d6000fd5b505b565b6000804714905090565b60008115159050919050565b61026c81610257565b82525050565b60006020820190506102876000830184610263565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102d18261028d565b91506102dc8361028d565b9250828210156102ef576102ee610297565b5b828203905092915050565b60006103058261028d565b91506103108361028d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561034957610348610297565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061038e8261028d565b91506103998361028d565b9250826103a9576103a8610354565b5b82820490509291505056fea26469706673582212202ce2e1d2f5628624969d08b9a9e9733814b28642fcdae9c9253bc968e171f95964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH4 0x12CC0300 TIMESTAMP PUSH2 0x55 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5F3 CODESIZE SUB DUP1 PUSH2 0x5F3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11F DUP3 PUSH2 0xDB JUMP JUMPDEST SWAP2 POP PUSH2 0x12A DUP4 PUSH2 0xDB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15F JUMPI PUSH2 0x15E PUSH2 0xE5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A DUP3 PUSH2 0x16F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA DUP2 PUSH2 0x18F JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C7 DUP2 PUSH2 0x1A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3 JUMPI PUSH2 0x1E2 PUSH2 0x16A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EA DUP1 PUSH2 0x209 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39F22F6B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x137 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x203 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA PUSH1 0x9 SELFBALANCE PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x383 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x24B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C DUP2 PUSH2 0x257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D1 DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC DUP4 PUSH2 0x28D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2EF JUMPI PUSH2 0x2EE PUSH2 0x297 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305 DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP2 POP PUSH2 0x310 DUP4 PUSH2 0x28D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x349 JUMPI PUSH2 0x348 PUSH2 0x297 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP2 POP PUSH2 0x399 DUP4 PUSH2 0x28D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3A9 JUMPI PUSH2 0x3A8 PUSH2 0x354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xE2 0xE1 0xD2 CREATE2 PUSH3 0x862496 SWAP14 ADDMOD 0xB9 0xA9 0xE9 PUSH20 0x3814B28642FCDAE9C9253BC968E171F95964736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "61:1137:0:-:0;;;144:10;128:26;;;;;;;;;;;;;;;;;;;;226:9;208:15;:27;;;;:::i;:::-;187:48;;244:151;;;;;;;;;;;;;;;;;;;;;:::i;:::-;311:7;298:9;:20;290:29;;;;;;346:6;332:11;;:20;;;;;;;;;;;;;;;;;;378:9;363:12;:24;;;;244:151;61:1137;;7:77:1;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:305;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;523:1;455:66;451:74;448:1;445:81;442:107;;;529:18;;:::i;:::-;442:107;573:1;570;566:9;559:16;;276:305;;;;:::o;668:117::-;777:1;774;767:12;914:126;951:7;991:42;984:5;980:54;969:65;;914:126;;;:::o;1046:96::-;1083:7;1112:24;1130:5;1112:24;:::i;:::-;1101:35;;1046:96;;;:::o;1148:122::-;1221:24;1239:5;1221:24;:::i;:::-;1214:5;1211:35;1201:63;;1260:1;1257;1250:12;1201:63;1148:122;:::o;1276:143::-;1333:5;1364:6;1358:13;1349:22;;1380:33;1407:5;1380:33;:::i;:::-;1276:143;;;;:::o;1425:351::-;1495:6;1544:2;1532:9;1523:7;1519:23;1515:32;1512:119;;;1550:79;;:::i;:::-;1512:119;1670:1;1695:64;1751:7;1742:6;1731:9;1727:22;1695:64;:::i;:::-;1685:74;;1641:128;1425:351;;;;:::o;61:1137:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@collectPenalty_139": {
									"entryPoint": 120,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isComplete_51": {
									"entryPoint": 589,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withdraw_99": {
									"entryPoint": 315,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1628:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "489:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "500:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "471:7:1",
														"type": ""
													}
												],
												"src": "434:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "545:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "562:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "555:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "662:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "652:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "652:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "686:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "676:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "676:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "517:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "781:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "763:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "758:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "792:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "797:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "792:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "839:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "841:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "841:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "841:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "833:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "836:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "830:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:8:1"
															},
															"nodeType": "YulIf",
															"src": "827:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "883:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "886:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "871:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "734:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "737:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "743:4:1",
														"type": ""
													}
												],
												"src": "703:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "948:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "958:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "981:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "963:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "958:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "992:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1015:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "992:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1190:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1192:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1192:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1192:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1102:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1095:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1088:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1110:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1117:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1185:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1113:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1113:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1107:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1107:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1084:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:105:1"
															},
															"nodeType": "YulIf",
															"src": "1081:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1222:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1237:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1240:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1222:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "931:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "934:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "940:7:1",
														"type": ""
													}
												],
												"src": "900:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1282:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1299:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1302:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1292:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1396:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1420:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1423:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1413:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1254:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1492:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1515:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1497:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1492:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1526:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1531:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1526:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1573:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1575:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1575:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1575:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1570:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:9:1"
															},
															"nodeType": "YulIf",
															"src": "1560:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1605:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1614:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1617:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1610:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1605:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1471:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1474:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1480:1:1",
														"type": ""
													}
												],
												"src": "1440:185:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806339f22f6b146100465780633ccfd60b14610050578063b2fa1c9e1461005a575b600080fd5b61004e610078565b005b61005861013b565b005b61006261024d565b60405161006f9190610272565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d257600080fd5b6000476000546100e291906102c6565b9050600081116100f157600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610137573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019557600080fd5b600354421015610203573373ffffffffffffffffffffffffffffffffffffffff166108fc600a6009476101c891906102fa565b6101d29190610383565b9081150290604051600060405180830381858888f193505050501580156101fd573d6000803e3d6000fd5b5061024b565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610249573d6000803e3d6000fd5b505b565b6000804714905090565b60008115159050919050565b61026c81610257565b82525050565b60006020820190506102876000830184610263565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102d18261028d565b91506102dc8361028d565b9250828210156102ef576102ee610297565b5b828203905092915050565b60006103058261028d565b91506103108361028d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561034957610348610297565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061038e8261028d565b91506103998361028d565b9250826103a9576103a8610354565b5b82820490509291505056fea26469706673582212202ce2e1d2f5628624969d08b9a9e9733814b28642fcdae9c9253bc968e171f95964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39F22F6B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x137 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x203 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA PUSH1 0x9 SELFBALANCE PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x383 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x24B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C DUP2 PUSH2 0x257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D1 DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC DUP4 PUSH2 0x28D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2EF JUMPI PUSH2 0x2EE PUSH2 0x297 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305 DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP2 POP PUSH2 0x310 DUP4 PUSH2 0x28D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x349 JUMPI PUSH2 0x348 PUSH2 0x297 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP2 POP PUSH2 0x399 DUP4 PUSH2 0x28D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3A9 JUMPI PUSH2 0x3A8 PUSH2 0x354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xE2 0xE1 0xD2 CREATE2 PUSH3 0x862496 SWAP14 ADDMOD 0xB9 0xA9 0xE9 PUSH20 0x3814B28642FCDAE9C9253BC968E171F95964736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "61:1137:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:330;;;:::i;:::-;;512:345;;;:::i;:::-;;403:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;865:330;931:11;;;;;;;;;;;917:25;;:10;:25;;;909:34;;;;;;956:17;991:21;976:12;;:36;;;;:::i;:::-;956:56;;1086:1;1074:9;:13;1066:22;;;;;;1144:10;1136:28;;:51;1165:21;1136:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:297;865:330::o;512:345::-;572:5;;;;;;;;;;;558:19;;:10;:19;;;550:28;;;;;;613:10;;595:15;:28;591:259;;;702:10;694:28;;:60;751:2;747:1;723:21;:25;;;;:::i;:::-;:30;;;;:::i;:::-;694:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:259;;;795:10;787:28;;:51;816:21;787:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:259;512:345::o;403:101::-;446:4;495:1;470:21;:26;463:33;;403:101;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:77::-;471:7;500:5;489:16;;434:77;;;:::o;517:180::-;565:77;562:1;555:88;662:4;659:1;652:15;686:4;683:1;676:15;703:191;743:4;763:20;781:1;763:20;:::i;:::-;758:25;;797:20;815:1;797:20;:::i;:::-;792:25;;836:1;833;830:8;827:34;;;841:18;;:::i;:::-;827:34;886:1;883;879:9;871:17;;703:191;;;;:::o;900:348::-;940:7;963:20;981:1;963:20;:::i;:::-;958:25;;997:20;1015:1;997:20;:::i;:::-;992:25;;1185:1;1117:66;1113:74;1110:1;1107:81;1102:1;1095:9;1088:17;1084:105;1081:131;;;1192:18;;:::i;:::-;1081:131;1240:1;1237;1233:9;1222:20;;900:348;;;;:::o;1254:180::-;1302:77;1299:1;1292:88;1399:4;1396:1;1389:15;1423:4;1420:1;1413:15;1440:185;1480:1;1497:20;1515:1;1497:20;:::i;:::-;1492:25;;1531:20;1549:1;1531:20;:::i;:::-;1526:25;;1570:1;1560:35;;1575:18;;:::i;:::-;1560:35;1617:1;1614;1610:9;1605:14;;1440:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "200400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"collectPenalty()": "infinite",
								"isComplete()": "373",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 1198,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 154,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 128,
									"end": 154,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 128,
									"end": 154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 128,
									"end": 154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 226,
									"end": 235,
									"name": "PUSH",
									"source": 0,
									"value": "12CC0300"
								},
								{
									"begin": 208,
									"end": 223,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 208,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 235,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 208,
									"end": 235,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 208,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 208,
									"end": 235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 208,
									"end": 235,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 235,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 235,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 235,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 244,
									"end": 395,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 244,
									"end": 395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 244,
									"end": 395,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 244,
									"end": 395,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 311,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 318,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 290,
									"end": 319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 290,
									"end": 319,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 290,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 290,
									"end": 319,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 290,
									"end": 319,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 290,
									"end": 319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 346,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 332,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 332,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 332,
									"end": 352,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 332,
									"end": 352,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 332,
									"end": 352,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 332,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 378,
									"end": 387,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 363,
									"end": 375,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 387,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 363,
									"end": 387,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 363,
									"end": 387,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 363,
									"end": 387,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 244,
									"end": 395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 276,
									"end": 581,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 276,
									"end": 581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 316,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 353,
									"end": 354,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 335,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 335,
									"end": 355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 335,
									"end": 355,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 335,
									"end": 355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 330,
									"end": 355,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 330,
									"end": 355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 387,
									"end": 388,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 369,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 369,
									"end": 389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 389,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 369,
									"end": 389,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 364,
									"end": 389,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 364,
									"end": 389,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 523,
									"end": 524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 455,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 451,
									"end": 525,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 448,
									"end": 449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 445,
									"end": 526,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 442,
									"end": 549,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 442,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 442,
									"end": 549,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 529,
									"end": 547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 529,
									"end": 547,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 442,
									"end": 549,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 442,
									"end": 549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 573,
									"end": 574,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 570,
									"end": 571,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 566,
									"end": 575,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 559,
									"end": 575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 559,
									"end": 575,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 276,
									"end": 581,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 276,
									"end": 581,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 276,
									"end": 581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 276,
									"end": 581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 276,
									"end": 581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 668,
									"end": 785,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 668,
									"end": 785,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 777,
									"end": 778,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 775,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 767,
									"end": 779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 914,
									"end": 1040,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 914,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 951,
									"end": 958,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 991,
									"end": 1033,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 984,
									"end": 989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 969,
									"end": 1034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 969,
									"end": 1034,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 914,
									"end": 1040,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 914,
									"end": 1040,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 914,
									"end": 1040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 914,
									"end": 1040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1142,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1046,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1112,
									"end": 1136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1130,
									"end": 1135,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1112,
									"end": 1136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1136,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1112,
									"end": 1136,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1136,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1136,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1142,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1142,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1142,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1270,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1148,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1239,
									"end": 1244,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1221,
									"end": 1245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1221,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1214,
									"end": 1219,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1246,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1264,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1201,
									"end": 1264,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1258,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1262,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1264,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1201,
									"end": 1264,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1270,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1270,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1419,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1276,
									"end": 1419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1338,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1370,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1407,
									"end": 1412,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1380,
									"end": 1413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1413,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1380,
									"end": 1413,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1419,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1419,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1419,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1419,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1419,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1776,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1425,
									"end": 1776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1501,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 1541,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1523,
									"end": 1530,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1519,
									"end": 1542,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1547,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1550,
									"end": 1629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1670,
									"end": 1671,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1751,
									"end": 1758,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1742,
									"end": 1748,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1740,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1727,
									"end": 1749,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1695,
									"end": 1759,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1695,
									"end": 1759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1695,
									"end": 1759,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1695,
									"end": 1759,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1759,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1776,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1776,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1776,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1776,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1198,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ce2e1d2f5628624969d08b9a9e9733814b28642fcdae9c9253bc968e171f95964736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "39F22F6B"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA1C9E"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 1198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 865,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 512,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 512,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 512,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 857,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 403,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 865,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 942,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 931,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 927,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 917,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 917,
											"end": 942,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 909,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 909,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 909,
											"end": 943,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 956,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1012,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 976,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 976,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 976,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 956,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 956,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1154,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1165,
											"end": 1186,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 1195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 865,
											"end": 1195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 512,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 558,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 558,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 558,
											"end": 568,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 558,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 558,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 558,
											"end": 577,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 550,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 550,
											"end": 578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 550,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 550,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 550,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 613,
											"end": 623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 610,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 591,
											"end": 850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 591,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 591,
											"end": 850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 702,
											"end": 712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 694,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 751,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 747,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 723,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 723,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 723,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 723,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 723,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 694,
											"end": 754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 754,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 694,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 591,
											"end": 850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 850,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 591,
											"end": 850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 795,
											"end": 805,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 787,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 816,
											"end": 837,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 787,
											"end": 838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 838,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 787,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 850,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 591,
											"end": 850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 512,
											"end": 857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 491,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 470,
											"end": 496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 463,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 434,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 697,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 517,
											"end": 697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 562,
											"end": 563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 662,
											"end": 666,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 659,
											"end": 660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 652,
											"end": 667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 686,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 683,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 703,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 703,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 743,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 763,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 763,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 815,
											"end": 816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 797,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 797,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 817,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 792,
											"end": 817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 833,
											"end": 834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 830,
											"end": 838,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 827,
											"end": 861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 827,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 827,
											"end": 861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 841,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 841,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 841,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 841,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 827,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 886,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 879,
											"end": 888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 871,
											"end": 888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 703,
											"end": 894,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 703,
											"end": 894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 703,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 703,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 703,
											"end": 894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1248,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 900,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 981,
											"end": 982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 963,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 963,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 963,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 963,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 958,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 958,
											"end": 983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 997,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 997,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1187,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1188,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1105,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1212,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1081,
											"end": 1212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1192,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1212,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1081,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1248,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1434,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1254,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1420,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1625,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1440,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1497,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1551,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1575,
											"end": 1593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1560,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1625,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"math/RetirementFundChallenge.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"collectPenalty()": "39f22f6b",
							"isComplete()": "b2fa1c9e",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"collectPenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"math/RetirementFundChallenge.sol\":\"RetirementFundChallenge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"math/RetirementFundChallenge.sol\":{\"keccak256\":\"0xe8d8baced5352dacbab472bdcb7cb4e34da875e911d5678782ce0933ad5dcd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d070ea74d1804620dbca8b993c66613bd195a977659fbea66cd4fd96e559f4\",\"dweb:/ipfs/QmPVJyieCq2Q9HtrUo6kFwh5J9CmGcYhrbL77izfXubKFJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "math/RetirementFundChallenge.sol:RetirementFundChallenge",
								"label": "startBalance",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "math/RetirementFundChallenge.sol:RetirementFundChallenge",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "math/RetirementFundChallenge.sol:RetirementFundChallenge",
								"label": "beneficiary",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "math/RetirementFundChallenge.sol:RetirementFundChallenge",
								"label": "expiration",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"math/RetirementFundChallenge.sol": {
				"ast": {
					"absolutePath": "math/RetirementFundChallenge.sol",
					"exportedSymbols": {
						"RetirementFundChallenge": [
							140
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RetirementFundChallenge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "RetirementFundChallenge",
							"nameLocation": "70:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "startBalance",
									"nameLocation": "109:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "101:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "101:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "136:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "128:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "128:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 5,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "144:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "144:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "beneficiary",
									"nameLocation": "169:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "161:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "expiration",
									"nameLocation": "195:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "187:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 11,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "208:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 12,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "208:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"hexValue": "33363530",
											"id": 13,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "226:9:0",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_315360000_by_1",
												"typeString": "int_const 315360000"
											},
											"value": "3650"
										},
										"src": "208:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "279:116:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "298:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "298:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "311:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "298:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 20,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "290:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "290:29:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "332:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"name": "player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "346:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "332:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "332:20:0"
											},
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 31,
														"name": "startBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "363:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 32,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "378:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "378:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "363:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "363:24:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "264:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "256:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:16:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:0:0"
									},
									"scope": 140,
									"src": "244:151:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "452:52:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 44,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "478:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																		"typeString": "contract RetirementFundChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																		"typeString": "contract RetirementFundChallenge"
																	}
																],
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "470:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 42,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "470:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "470:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "470:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "495:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "470:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 41,
												"id": 49,
												"nodeType": "Return",
												"src": "463:33:0"
											}
										]
									},
									"functionSelector": "b2fa1c9e",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isComplete",
									"nameLocation": "412:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "422:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "446:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:6:0"
									},
									"scope": 140,
									"src": "403:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "539:318:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 55,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "558:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "558:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 57,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "572:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "558:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "550:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "550:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 61,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "595:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "595:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 63,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "613:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "595:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "772:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 91,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "824:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																						"typeString": "contract RetirementFundChallenge"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																						"typeString": "contract RetirementFundChallenge"
																					}
																				],
																				"id": 90,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "816:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 89,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "816:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 92,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "816:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "816:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 85,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "795:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "795:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "787:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "787:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "787:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "787:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "787:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 95,
															"nodeType": "ExpressionStatement",
															"src": "787:51:0"
														}
													]
												},
												"id": 97,
												"nodeType": "IfStatement",
												"src": "591:259:0",
												"trueBody": {
													"id": 82,
													"nodeType": "Block",
													"src": "625:141:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 77,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 73,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "731:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																								"typeString": "contract RetirementFundChallenge"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																								"typeString": "contract RetirementFundChallenge"
																							}
																						],
																						"id": 72,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "723:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 71,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "723:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "723:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"src": "723:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "39",
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "747:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_9_by_1",
																					"typeString": "int_const 9"
																				},
																				"value": "9"
																			},
																			"src": "723:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 78,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "751:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "723:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 67,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "702:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 68,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "702:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "694:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 65,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "694:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "694:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "694:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "694:60:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 81,
															"nodeType": "ExpressionStatement",
															"src": "694:60:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "521:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:0"
									},
									"scope": 140,
									"src": "512:345:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "898:297:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 103,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "917:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 105,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "931:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "917:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "909:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "909:34:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "withdrawn",
														"nameLocation": "964:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "956:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "956:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 111,
														"name": "startBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "976:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 114,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "999:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																		"typeString": "contract RetirementFundChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																		"typeString": "contract RetirementFundChallenge"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "991:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "991:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "991:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "976:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "956:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 120,
																"name": "withdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1074:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1074:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1066:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1066:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 133,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1173:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																			"typeString": "contract RetirementFundChallenge"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_RetirementFundChallenge_$140",
																			"typeString": "contract RetirementFundChallenge"
																		}
																	],
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 131,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1165:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1165:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1165:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 127,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1144:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1144:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1136:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 125,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1136:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1136:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1136:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1136:51:0"
											}
										]
									},
									"functionSelector": "39f22f6b",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collectPenalty",
									"nameLocation": "874:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:2:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "898:0:0"
									},
									"scope": 140,
									"src": "865:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 141,
							"src": "61:1137:0",
							"usedErrors": []
						}
					],
					"src": "33:1165:0"
				},
				"id": 0
			}
		}
	}
}